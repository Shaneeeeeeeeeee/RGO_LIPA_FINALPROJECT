//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace RGO_LIPA_FINALPROJECT {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("RGO_LIPADataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class RGO_LIPADataSet : global::System.Data.DataSet {
        
        private announcementDataTable tableannouncement;
        
        private faqDataTable tablefaq;
        
        private feedbacksDataTable tablefeedbacks;
        
        private itemDataTable tableitem;
        
        private order_tableDataTable tableorder_table;
        
        private other_staffsDataTable tableother_staffs;
        
        private paymentDataTable tablepayment;
        
        private rgo_staffsDataTable tablergo_staffs;
        
        private studentDataTable tablestudent;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public RGO_LIPADataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected RGO_LIPADataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["announcement"] != null)) {
                    base.Tables.Add(new announcementDataTable(ds.Tables["announcement"]));
                }
                if ((ds.Tables["faq"] != null)) {
                    base.Tables.Add(new faqDataTable(ds.Tables["faq"]));
                }
                if ((ds.Tables["feedbacks"] != null)) {
                    base.Tables.Add(new feedbacksDataTable(ds.Tables["feedbacks"]));
                }
                if ((ds.Tables["item"] != null)) {
                    base.Tables.Add(new itemDataTable(ds.Tables["item"]));
                }
                if ((ds.Tables["order_table"] != null)) {
                    base.Tables.Add(new order_tableDataTable(ds.Tables["order_table"]));
                }
                if ((ds.Tables["other_staffs"] != null)) {
                    base.Tables.Add(new other_staffsDataTable(ds.Tables["other_staffs"]));
                }
                if ((ds.Tables["payment"] != null)) {
                    base.Tables.Add(new paymentDataTable(ds.Tables["payment"]));
                }
                if ((ds.Tables["rgo_staffs"] != null)) {
                    base.Tables.Add(new rgo_staffsDataTable(ds.Tables["rgo_staffs"]));
                }
                if ((ds.Tables["student"] != null)) {
                    base.Tables.Add(new studentDataTable(ds.Tables["student"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public announcementDataTable announcement {
            get {
                return this.tableannouncement;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public faqDataTable faq {
            get {
                return this.tablefaq;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public feedbacksDataTable feedbacks {
            get {
                return this.tablefeedbacks;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public itemDataTable item {
            get {
                return this.tableitem;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public order_tableDataTable order_table {
            get {
                return this.tableorder_table;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public other_staffsDataTable other_staffs {
            get {
                return this.tableother_staffs;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public paymentDataTable payment {
            get {
                return this.tablepayment;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public rgo_staffsDataTable rgo_staffs {
            get {
                return this.tablergo_staffs;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public studentDataTable student {
            get {
                return this.tablestudent;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            RGO_LIPADataSet cln = ((RGO_LIPADataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["announcement"] != null)) {
                    base.Tables.Add(new announcementDataTable(ds.Tables["announcement"]));
                }
                if ((ds.Tables["faq"] != null)) {
                    base.Tables.Add(new faqDataTable(ds.Tables["faq"]));
                }
                if ((ds.Tables["feedbacks"] != null)) {
                    base.Tables.Add(new feedbacksDataTable(ds.Tables["feedbacks"]));
                }
                if ((ds.Tables["item"] != null)) {
                    base.Tables.Add(new itemDataTable(ds.Tables["item"]));
                }
                if ((ds.Tables["order_table"] != null)) {
                    base.Tables.Add(new order_tableDataTable(ds.Tables["order_table"]));
                }
                if ((ds.Tables["other_staffs"] != null)) {
                    base.Tables.Add(new other_staffsDataTable(ds.Tables["other_staffs"]));
                }
                if ((ds.Tables["payment"] != null)) {
                    base.Tables.Add(new paymentDataTable(ds.Tables["payment"]));
                }
                if ((ds.Tables["rgo_staffs"] != null)) {
                    base.Tables.Add(new rgo_staffsDataTable(ds.Tables["rgo_staffs"]));
                }
                if ((ds.Tables["student"] != null)) {
                    base.Tables.Add(new studentDataTable(ds.Tables["student"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableannouncement = ((announcementDataTable)(base.Tables["announcement"]));
            if ((initTable == true)) {
                if ((this.tableannouncement != null)) {
                    this.tableannouncement.InitVars();
                }
            }
            this.tablefaq = ((faqDataTable)(base.Tables["faq"]));
            if ((initTable == true)) {
                if ((this.tablefaq != null)) {
                    this.tablefaq.InitVars();
                }
            }
            this.tablefeedbacks = ((feedbacksDataTable)(base.Tables["feedbacks"]));
            if ((initTable == true)) {
                if ((this.tablefeedbacks != null)) {
                    this.tablefeedbacks.InitVars();
                }
            }
            this.tableitem = ((itemDataTable)(base.Tables["item"]));
            if ((initTable == true)) {
                if ((this.tableitem != null)) {
                    this.tableitem.InitVars();
                }
            }
            this.tableorder_table = ((order_tableDataTable)(base.Tables["order_table"]));
            if ((initTable == true)) {
                if ((this.tableorder_table != null)) {
                    this.tableorder_table.InitVars();
                }
            }
            this.tableother_staffs = ((other_staffsDataTable)(base.Tables["other_staffs"]));
            if ((initTable == true)) {
                if ((this.tableother_staffs != null)) {
                    this.tableother_staffs.InitVars();
                }
            }
            this.tablepayment = ((paymentDataTable)(base.Tables["payment"]));
            if ((initTable == true)) {
                if ((this.tablepayment != null)) {
                    this.tablepayment.InitVars();
                }
            }
            this.tablergo_staffs = ((rgo_staffsDataTable)(base.Tables["rgo_staffs"]));
            if ((initTable == true)) {
                if ((this.tablergo_staffs != null)) {
                    this.tablergo_staffs.InitVars();
                }
            }
            this.tablestudent = ((studentDataTable)(base.Tables["student"]));
            if ((initTable == true)) {
                if ((this.tablestudent != null)) {
                    this.tablestudent.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitClass() {
            this.DataSetName = "RGO_LIPADataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/RGO_LIPADataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableannouncement = new announcementDataTable();
            base.Tables.Add(this.tableannouncement);
            this.tablefaq = new faqDataTable();
            base.Tables.Add(this.tablefaq);
            this.tablefeedbacks = new feedbacksDataTable();
            base.Tables.Add(this.tablefeedbacks);
            this.tableitem = new itemDataTable();
            base.Tables.Add(this.tableitem);
            this.tableorder_table = new order_tableDataTable();
            base.Tables.Add(this.tableorder_table);
            this.tableother_staffs = new other_staffsDataTable();
            base.Tables.Add(this.tableother_staffs);
            this.tablepayment = new paymentDataTable();
            base.Tables.Add(this.tablepayment);
            this.tablergo_staffs = new rgo_staffsDataTable();
            base.Tables.Add(this.tablergo_staffs);
            this.tablestudent = new studentDataTable();
            base.Tables.Add(this.tablestudent);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeannouncement() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializefaq() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializefeedbacks() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeitem() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeorder_table() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeother_staffs() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializepayment() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializergo_staffs() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializestudent() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            RGO_LIPADataSet ds = new RGO_LIPADataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void announcementRowChangeEventHandler(object sender, announcementRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void faqRowChangeEventHandler(object sender, faqRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void feedbacksRowChangeEventHandler(object sender, feedbacksRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void itemRowChangeEventHandler(object sender, itemRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void order_tableRowChangeEventHandler(object sender, order_tableRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void other_staffsRowChangeEventHandler(object sender, other_staffsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void paymentRowChangeEventHandler(object sender, paymentRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void rgo_staffsRowChangeEventHandler(object sender, rgo_staffsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void studentRowChangeEventHandler(object sender, studentRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class announcementDataTable : global::System.Data.TypedTableBase<announcementRow> {
            
            private global::System.Data.DataColumn columnannouncementid;
            
            private global::System.Data.DataColumn columntitle;
            
            private global::System.Data.DataColumn columnstaffid;
            
            private global::System.Data.DataColumn columnannouncement;
            
            private global::System.Data.DataColumn columndateannounced;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public announcementDataTable() {
                this.TableName = "announcement";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal announcementDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected announcementDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn announcementidColumn {
                get {
                    return this.columnannouncementid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn titleColumn {
                get {
                    return this.columntitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn staffidColumn {
                get {
                    return this.columnstaffid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn announcementColumn {
                get {
                    return this.columnannouncement;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn dateannouncedColumn {
                get {
                    return this.columndateannounced;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public announcementRow this[int index] {
                get {
                    return ((announcementRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event announcementRowChangeEventHandler announcementRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event announcementRowChangeEventHandler announcementRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event announcementRowChangeEventHandler announcementRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event announcementRowChangeEventHandler announcementRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddannouncementRow(announcementRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public announcementRow AddannouncementRow(string title, int staffid, string announcement, System.DateTime dateannounced) {
                announcementRow rowannouncementRow = ((announcementRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        title,
                        staffid,
                        announcement,
                        dateannounced};
                rowannouncementRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowannouncementRow);
                return rowannouncementRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public announcementRow FindByannouncementid(int announcementid) {
                return ((announcementRow)(this.Rows.Find(new object[] {
                            announcementid})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                announcementDataTable cln = ((announcementDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new announcementDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnannouncementid = base.Columns["announcementid"];
                this.columntitle = base.Columns["title"];
                this.columnstaffid = base.Columns["staffid"];
                this.columnannouncement = base.Columns["announcement"];
                this.columndateannounced = base.Columns["dateannounced"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnannouncementid = new global::System.Data.DataColumn("announcementid", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnannouncementid);
                this.columntitle = new global::System.Data.DataColumn("title", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntitle);
                this.columnstaffid = new global::System.Data.DataColumn("staffid", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaffid);
                this.columnannouncement = new global::System.Data.DataColumn("announcement", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnannouncement);
                this.columndateannounced = new global::System.Data.DataColumn("dateannounced", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndateannounced);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnannouncementid}, true));
                this.columnannouncementid.AutoIncrement = true;
                this.columnannouncementid.AutoIncrementSeed = -1;
                this.columnannouncementid.AutoIncrementStep = -1;
                this.columnannouncementid.AllowDBNull = false;
                this.columnannouncementid.Unique = true;
                this.columntitle.AllowDBNull = false;
                this.columnstaffid.AllowDBNull = false;
                this.columndateannounced.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public announcementRow NewannouncementRow() {
                return ((announcementRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new announcementRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(announcementRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.announcementRowChanged != null)) {
                    this.announcementRowChanged(this, new announcementRowChangeEvent(((announcementRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.announcementRowChanging != null)) {
                    this.announcementRowChanging(this, new announcementRowChangeEvent(((announcementRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.announcementRowDeleted != null)) {
                    this.announcementRowDeleted(this, new announcementRowChangeEvent(((announcementRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.announcementRowDeleting != null)) {
                    this.announcementRowDeleting(this, new announcementRowChangeEvent(((announcementRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveannouncementRow(announcementRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RGO_LIPADataSet ds = new RGO_LIPADataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "announcementDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class faqDataTable : global::System.Data.TypedTableBase<faqRow> {
            
            private global::System.Data.DataColumn columnfaqid;
            
            private global::System.Data.DataColumn columntitle;
            
            private global::System.Data.DataColumn columnstaffid;
            
            private global::System.Data.DataColumn columnfaq;
            
            private global::System.Data.DataColumn columndatefaq;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public faqDataTable() {
                this.TableName = "faq";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal faqDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected faqDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn faqidColumn {
                get {
                    return this.columnfaqid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn titleColumn {
                get {
                    return this.columntitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn staffidColumn {
                get {
                    return this.columnstaffid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn faqColumn {
                get {
                    return this.columnfaq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn datefaqColumn {
                get {
                    return this.columndatefaq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public faqRow this[int index] {
                get {
                    return ((faqRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event faqRowChangeEventHandler faqRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event faqRowChangeEventHandler faqRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event faqRowChangeEventHandler faqRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event faqRowChangeEventHandler faqRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddfaqRow(faqRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public faqRow AddfaqRow(string title, int staffid, string faq, System.DateTime datefaq) {
                faqRow rowfaqRow = ((faqRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        title,
                        staffid,
                        faq,
                        datefaq};
                rowfaqRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowfaqRow);
                return rowfaqRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public faqRow FindByfaqid(int faqid) {
                return ((faqRow)(this.Rows.Find(new object[] {
                            faqid})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                faqDataTable cln = ((faqDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new faqDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnfaqid = base.Columns["faqid"];
                this.columntitle = base.Columns["title"];
                this.columnstaffid = base.Columns["staffid"];
                this.columnfaq = base.Columns["faq"];
                this.columndatefaq = base.Columns["datefaq"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnfaqid = new global::System.Data.DataColumn("faqid", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfaqid);
                this.columntitle = new global::System.Data.DataColumn("title", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntitle);
                this.columnstaffid = new global::System.Data.DataColumn("staffid", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaffid);
                this.columnfaq = new global::System.Data.DataColumn("faq", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfaq);
                this.columndatefaq = new global::System.Data.DataColumn("datefaq", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndatefaq);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnfaqid}, true));
                this.columnfaqid.AutoIncrement = true;
                this.columnfaqid.AutoIncrementSeed = -1;
                this.columnfaqid.AutoIncrementStep = -1;
                this.columnfaqid.AllowDBNull = false;
                this.columnfaqid.Unique = true;
                this.columntitle.AllowDBNull = false;
                this.columnstaffid.AllowDBNull = false;
                this.columndatefaq.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public faqRow NewfaqRow() {
                return ((faqRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new faqRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(faqRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.faqRowChanged != null)) {
                    this.faqRowChanged(this, new faqRowChangeEvent(((faqRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.faqRowChanging != null)) {
                    this.faqRowChanging(this, new faqRowChangeEvent(((faqRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.faqRowDeleted != null)) {
                    this.faqRowDeleted(this, new faqRowChangeEvent(((faqRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.faqRowDeleting != null)) {
                    this.faqRowDeleting(this, new faqRowChangeEvent(((faqRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemovefaqRow(faqRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RGO_LIPADataSet ds = new RGO_LIPADataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "faqDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class feedbacksDataTable : global::System.Data.TypedTableBase<feedbacksRow> {
            
            private global::System.Data.DataColumn columnfbid;
            
            private global::System.Data.DataColumn columnsrcode;
            
            private global::System.Data.DataColumn columnfeedbacks;
            
            private global::System.Data.DataColumn columndatefb;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public feedbacksDataTable() {
                this.TableName = "feedbacks";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal feedbacksDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected feedbacksDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn fbidColumn {
                get {
                    return this.columnfbid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn srcodeColumn {
                get {
                    return this.columnsrcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn feedbacksColumn {
                get {
                    return this.columnfeedbacks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn datefbColumn {
                get {
                    return this.columndatefb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public feedbacksRow this[int index] {
                get {
                    return ((feedbacksRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event feedbacksRowChangeEventHandler feedbacksRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event feedbacksRowChangeEventHandler feedbacksRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event feedbacksRowChangeEventHandler feedbacksRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event feedbacksRowChangeEventHandler feedbacksRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddfeedbacksRow(feedbacksRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public feedbacksRow AddfeedbacksRow(int srcode, string feedbacks, System.DateTime datefb) {
                feedbacksRow rowfeedbacksRow = ((feedbacksRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        srcode,
                        feedbacks,
                        datefb};
                rowfeedbacksRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowfeedbacksRow);
                return rowfeedbacksRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public feedbacksRow FindByfbid(int fbid) {
                return ((feedbacksRow)(this.Rows.Find(new object[] {
                            fbid})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                feedbacksDataTable cln = ((feedbacksDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new feedbacksDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnfbid = base.Columns["fbid"];
                this.columnsrcode = base.Columns["srcode"];
                this.columnfeedbacks = base.Columns["feedbacks"];
                this.columndatefb = base.Columns["datefb"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnfbid = new global::System.Data.DataColumn("fbid", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfbid);
                this.columnsrcode = new global::System.Data.DataColumn("srcode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsrcode);
                this.columnfeedbacks = new global::System.Data.DataColumn("feedbacks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfeedbacks);
                this.columndatefb = new global::System.Data.DataColumn("datefb", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndatefb);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnfbid}, true));
                this.columnfbid.AutoIncrement = true;
                this.columnfbid.AutoIncrementSeed = -1;
                this.columnfbid.AutoIncrementStep = -1;
                this.columnfbid.AllowDBNull = false;
                this.columnfbid.Unique = true;
                this.columnsrcode.AllowDBNull = false;
                this.columndatefb.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public feedbacksRow NewfeedbacksRow() {
                return ((feedbacksRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new feedbacksRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(feedbacksRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.feedbacksRowChanged != null)) {
                    this.feedbacksRowChanged(this, new feedbacksRowChangeEvent(((feedbacksRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.feedbacksRowChanging != null)) {
                    this.feedbacksRowChanging(this, new feedbacksRowChangeEvent(((feedbacksRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.feedbacksRowDeleted != null)) {
                    this.feedbacksRowDeleted(this, new feedbacksRowChangeEvent(((feedbacksRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.feedbacksRowDeleting != null)) {
                    this.feedbacksRowDeleting(this, new feedbacksRowChangeEvent(((feedbacksRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemovefeedbacksRow(feedbacksRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RGO_LIPADataSet ds = new RGO_LIPADataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "feedbacksDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class itemDataTable : global::System.Data.TypedTableBase<itemRow> {
            
            private global::System.Data.DataColumn columnitemid;
            
            private global::System.Data.DataColumn columnnameofitem;
            
            private global::System.Data.DataColumn columnsizeofitem;
            
            private global::System.Data.DataColumn columnprice;
            
            private global::System.Data.DataColumn columndescription;
            
            private global::System.Data.DataColumn columnavailablestocks;
            
            private global::System.Data.DataColumn columnlast_updated;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public itemDataTable() {
                this.TableName = "item";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal itemDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected itemDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn itemidColumn {
                get {
                    return this.columnitemid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn nameofitemColumn {
                get {
                    return this.columnnameofitem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn sizeofitemColumn {
                get {
                    return this.columnsizeofitem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn priceColumn {
                get {
                    return this.columnprice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn descriptionColumn {
                get {
                    return this.columndescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn availablestocksColumn {
                get {
                    return this.columnavailablestocks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn last_updatedColumn {
                get {
                    return this.columnlast_updated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public itemRow this[int index] {
                get {
                    return ((itemRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event itemRowChangeEventHandler itemRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event itemRowChangeEventHandler itemRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event itemRowChangeEventHandler itemRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event itemRowChangeEventHandler itemRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AdditemRow(itemRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public itemRow AdditemRow(int itemid, string nameofitem, string sizeofitem, decimal price, string description, int availablestocks, System.DateTime last_updated) {
                itemRow rowitemRow = ((itemRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        itemid,
                        nameofitem,
                        sizeofitem,
                        price,
                        description,
                        availablestocks,
                        last_updated};
                rowitemRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowitemRow);
                return rowitemRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public itemRow FindByitemid(int itemid) {
                return ((itemRow)(this.Rows.Find(new object[] {
                            itemid})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                itemDataTable cln = ((itemDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new itemDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnitemid = base.Columns["itemid"];
                this.columnnameofitem = base.Columns["nameofitem"];
                this.columnsizeofitem = base.Columns["sizeofitem"];
                this.columnprice = base.Columns["price"];
                this.columndescription = base.Columns["description"];
                this.columnavailablestocks = base.Columns["availablestocks"];
                this.columnlast_updated = base.Columns["last_updated"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnitemid = new global::System.Data.DataColumn("itemid", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnitemid);
                this.columnnameofitem = new global::System.Data.DataColumn("nameofitem", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnameofitem);
                this.columnsizeofitem = new global::System.Data.DataColumn("sizeofitem", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsizeofitem);
                this.columnprice = new global::System.Data.DataColumn("price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprice);
                this.columndescription = new global::System.Data.DataColumn("description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescription);
                this.columnavailablestocks = new global::System.Data.DataColumn("availablestocks", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnavailablestocks);
                this.columnlast_updated = new global::System.Data.DataColumn("last_updated", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlast_updated);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnitemid}, true));
                this.columnitemid.AllowDBNull = false;
                this.columnitemid.Unique = true;
                this.columnnameofitem.AllowDBNull = false;
                this.columnnameofitem.MaxLength = 255;
                this.columnsizeofitem.AllowDBNull = false;
                this.columnsizeofitem.MaxLength = 255;
                this.columnprice.AllowDBNull = false;
                this.columnavailablestocks.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public itemRow NewitemRow() {
                return ((itemRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new itemRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(itemRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.itemRowChanged != null)) {
                    this.itemRowChanged(this, new itemRowChangeEvent(((itemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.itemRowChanging != null)) {
                    this.itemRowChanging(this, new itemRowChangeEvent(((itemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.itemRowDeleted != null)) {
                    this.itemRowDeleted(this, new itemRowChangeEvent(((itemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.itemRowDeleting != null)) {
                    this.itemRowDeleting(this, new itemRowChangeEvent(((itemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveitemRow(itemRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RGO_LIPADataSet ds = new RGO_LIPADataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "itemDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class order_tableDataTable : global::System.Data.TypedTableBase<order_tableRow> {
            
            private global::System.Data.DataColumn columnorderid;
            
            private global::System.Data.DataColumn columndateordered;
            
            private global::System.Data.DataColumn columnsrcode;
            
            private global::System.Data.DataColumn columnitemid;
            
            private global::System.Data.DataColumn columnprice;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public order_tableDataTable() {
                this.TableName = "order_table";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal order_tableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected order_tableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn orderidColumn {
                get {
                    return this.columnorderid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn dateorderedColumn {
                get {
                    return this.columndateordered;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn srcodeColumn {
                get {
                    return this.columnsrcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn itemidColumn {
                get {
                    return this.columnitemid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn priceColumn {
                get {
                    return this.columnprice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public order_tableRow this[int index] {
                get {
                    return ((order_tableRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event order_tableRowChangeEventHandler order_tableRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event order_tableRowChangeEventHandler order_tableRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event order_tableRowChangeEventHandler order_tableRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event order_tableRowChangeEventHandler order_tableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Addorder_tableRow(order_tableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public order_tableRow Addorder_tableRow(System.DateTime dateordered, int srcode, int itemid, decimal price) {
                order_tableRow roworder_tableRow = ((order_tableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        dateordered,
                        srcode,
                        itemid,
                        price};
                roworder_tableRow.ItemArray = columnValuesArray;
                this.Rows.Add(roworder_tableRow);
                return roworder_tableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public order_tableRow FindByorderid(int orderid) {
                return ((order_tableRow)(this.Rows.Find(new object[] {
                            orderid})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                order_tableDataTable cln = ((order_tableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new order_tableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnorderid = base.Columns["orderid"];
                this.columndateordered = base.Columns["dateordered"];
                this.columnsrcode = base.Columns["srcode"];
                this.columnitemid = base.Columns["itemid"];
                this.columnprice = base.Columns["price"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnorderid = new global::System.Data.DataColumn("orderid", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorderid);
                this.columndateordered = new global::System.Data.DataColumn("dateordered", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndateordered);
                this.columnsrcode = new global::System.Data.DataColumn("srcode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsrcode);
                this.columnitemid = new global::System.Data.DataColumn("itemid", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnitemid);
                this.columnprice = new global::System.Data.DataColumn("price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprice);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnorderid}, true));
                this.columnorderid.AutoIncrement = true;
                this.columnorderid.AutoIncrementSeed = -1;
                this.columnorderid.AutoIncrementStep = -1;
                this.columnorderid.AllowDBNull = false;
                this.columnorderid.Unique = true;
                this.columndateordered.AllowDBNull = false;
                this.columnsrcode.AllowDBNull = false;
                this.columnitemid.AllowDBNull = false;
                this.columnprice.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public order_tableRow Neworder_tableRow() {
                return ((order_tableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new order_tableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(order_tableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.order_tableRowChanged != null)) {
                    this.order_tableRowChanged(this, new order_tableRowChangeEvent(((order_tableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.order_tableRowChanging != null)) {
                    this.order_tableRowChanging(this, new order_tableRowChangeEvent(((order_tableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.order_tableRowDeleted != null)) {
                    this.order_tableRowDeleted(this, new order_tableRowChangeEvent(((order_tableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.order_tableRowDeleting != null)) {
                    this.order_tableRowDeleting(this, new order_tableRowChangeEvent(((order_tableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Removeorder_tableRow(order_tableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RGO_LIPADataSet ds = new RGO_LIPADataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "order_tableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class other_staffsDataTable : global::System.Data.TypedTableBase<other_staffsRow> {
            
            private global::System.Data.DataColumn columnstaffid;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columnposition;
            
            private global::System.Data.DataColumn columnemail;
            
            private global::System.Data.DataColumn columnpassword;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public other_staffsDataTable() {
                this.TableName = "other_staffs";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal other_staffsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected other_staffsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn staffidColumn {
                get {
                    return this.columnstaffid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn positionColumn {
                get {
                    return this.columnposition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn emailColumn {
                get {
                    return this.columnemail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn passwordColumn {
                get {
                    return this.columnpassword;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public other_staffsRow this[int index] {
                get {
                    return ((other_staffsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event other_staffsRowChangeEventHandler other_staffsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event other_staffsRowChangeEventHandler other_staffsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event other_staffsRowChangeEventHandler other_staffsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event other_staffsRowChangeEventHandler other_staffsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Addother_staffsRow(other_staffsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public other_staffsRow Addother_staffsRow(int staffid, string name, string position, string email, string password) {
                other_staffsRow rowother_staffsRow = ((other_staffsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        staffid,
                        name,
                        position,
                        email,
                        password};
                rowother_staffsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowother_staffsRow);
                return rowother_staffsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public other_staffsRow FindBystaffid(int staffid) {
                return ((other_staffsRow)(this.Rows.Find(new object[] {
                            staffid})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                other_staffsDataTable cln = ((other_staffsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new other_staffsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnstaffid = base.Columns["staffid"];
                this.columnname = base.Columns["name"];
                this.columnposition = base.Columns["position"];
                this.columnemail = base.Columns["email"];
                this.columnpassword = base.Columns["password"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnstaffid = new global::System.Data.DataColumn("staffid", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaffid);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columnposition = new global::System.Data.DataColumn("position", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnposition);
                this.columnemail = new global::System.Data.DataColumn("email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemail);
                this.columnpassword = new global::System.Data.DataColumn("password", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpassword);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnstaffid}, true));
                this.columnstaffid.AllowDBNull = false;
                this.columnstaffid.Unique = true;
                this.columnname.AllowDBNull = false;
                this.columnname.MaxLength = 255;
                this.columnposition.AllowDBNull = false;
                this.columnposition.MaxLength = 255;
                this.columnemail.AllowDBNull = false;
                this.columnemail.MaxLength = 255;
                this.columnpassword.AllowDBNull = false;
                this.columnpassword.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public other_staffsRow Newother_staffsRow() {
                return ((other_staffsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new other_staffsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(other_staffsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.other_staffsRowChanged != null)) {
                    this.other_staffsRowChanged(this, new other_staffsRowChangeEvent(((other_staffsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.other_staffsRowChanging != null)) {
                    this.other_staffsRowChanging(this, new other_staffsRowChangeEvent(((other_staffsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.other_staffsRowDeleted != null)) {
                    this.other_staffsRowDeleted(this, new other_staffsRowChangeEvent(((other_staffsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.other_staffsRowDeleting != null)) {
                    this.other_staffsRowDeleting(this, new other_staffsRowChangeEvent(((other_staffsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Removeother_staffsRow(other_staffsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RGO_LIPADataSet ds = new RGO_LIPADataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "other_staffsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class paymentDataTable : global::System.Data.TypedTableBase<paymentRow> {
            
            private global::System.Data.DataColumn columnpaymentid;
            
            private global::System.Data.DataColumn columnorderid;
            
            private global::System.Data.DataColumn columnstaffid;
            
            private global::System.Data.DataColumn columndatepaid;
            
            private global::System.Data.DataColumn columnnote;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public paymentDataTable() {
                this.TableName = "payment";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal paymentDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected paymentDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn paymentidColumn {
                get {
                    return this.columnpaymentid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn orderidColumn {
                get {
                    return this.columnorderid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn staffidColumn {
                get {
                    return this.columnstaffid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn datepaidColumn {
                get {
                    return this.columndatepaid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn noteColumn {
                get {
                    return this.columnnote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public paymentRow this[int index] {
                get {
                    return ((paymentRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event paymentRowChangeEventHandler paymentRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event paymentRowChangeEventHandler paymentRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event paymentRowChangeEventHandler paymentRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event paymentRowChangeEventHandler paymentRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddpaymentRow(paymentRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public paymentRow AddpaymentRow(int orderid, int staffid, System.DateTime datepaid, string note) {
                paymentRow rowpaymentRow = ((paymentRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        orderid,
                        staffid,
                        datepaid,
                        note};
                rowpaymentRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowpaymentRow);
                return rowpaymentRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public paymentRow FindBypaymentid(int paymentid) {
                return ((paymentRow)(this.Rows.Find(new object[] {
                            paymentid})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                paymentDataTable cln = ((paymentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new paymentDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnpaymentid = base.Columns["paymentid"];
                this.columnorderid = base.Columns["orderid"];
                this.columnstaffid = base.Columns["staffid"];
                this.columndatepaid = base.Columns["datepaid"];
                this.columnnote = base.Columns["note"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnpaymentid = new global::System.Data.DataColumn("paymentid", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpaymentid);
                this.columnorderid = new global::System.Data.DataColumn("orderid", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorderid);
                this.columnstaffid = new global::System.Data.DataColumn("staffid", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaffid);
                this.columndatepaid = new global::System.Data.DataColumn("datepaid", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndatepaid);
                this.columnnote = new global::System.Data.DataColumn("note", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnote);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnorderid}, false));
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint2", new global::System.Data.DataColumn[] {
                                this.columnpaymentid}, true));
                this.columnpaymentid.AutoIncrement = true;
                this.columnpaymentid.AutoIncrementSeed = -1;
                this.columnpaymentid.AutoIncrementStep = -1;
                this.columnpaymentid.AllowDBNull = false;
                this.columnpaymentid.Unique = true;
                this.columnorderid.AllowDBNull = false;
                this.columnorderid.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public paymentRow NewpaymentRow() {
                return ((paymentRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new paymentRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(paymentRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.paymentRowChanged != null)) {
                    this.paymentRowChanged(this, new paymentRowChangeEvent(((paymentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.paymentRowChanging != null)) {
                    this.paymentRowChanging(this, new paymentRowChangeEvent(((paymentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.paymentRowDeleted != null)) {
                    this.paymentRowDeleted(this, new paymentRowChangeEvent(((paymentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.paymentRowDeleting != null)) {
                    this.paymentRowDeleting(this, new paymentRowChangeEvent(((paymentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemovepaymentRow(paymentRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RGO_LIPADataSet ds = new RGO_LIPADataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "paymentDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class rgo_staffsDataTable : global::System.Data.TypedTableBase<rgo_staffsRow> {
            
            private global::System.Data.DataColumn columnstaffid;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columnposition;
            
            private global::System.Data.DataColumn columnemail;
            
            private global::System.Data.DataColumn columnpassword;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public rgo_staffsDataTable() {
                this.TableName = "rgo_staffs";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal rgo_staffsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected rgo_staffsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn staffidColumn {
                get {
                    return this.columnstaffid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn positionColumn {
                get {
                    return this.columnposition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn emailColumn {
                get {
                    return this.columnemail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn passwordColumn {
                get {
                    return this.columnpassword;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public rgo_staffsRow this[int index] {
                get {
                    return ((rgo_staffsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event rgo_staffsRowChangeEventHandler rgo_staffsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event rgo_staffsRowChangeEventHandler rgo_staffsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event rgo_staffsRowChangeEventHandler rgo_staffsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event rgo_staffsRowChangeEventHandler rgo_staffsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Addrgo_staffsRow(rgo_staffsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public rgo_staffsRow Addrgo_staffsRow(int staffid, string name, string position, string email, string password) {
                rgo_staffsRow rowrgo_staffsRow = ((rgo_staffsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        staffid,
                        name,
                        position,
                        email,
                        password};
                rowrgo_staffsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowrgo_staffsRow);
                return rowrgo_staffsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public rgo_staffsRow FindBystaffid(int staffid) {
                return ((rgo_staffsRow)(this.Rows.Find(new object[] {
                            staffid})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                rgo_staffsDataTable cln = ((rgo_staffsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new rgo_staffsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnstaffid = base.Columns["staffid"];
                this.columnname = base.Columns["name"];
                this.columnposition = base.Columns["position"];
                this.columnemail = base.Columns["email"];
                this.columnpassword = base.Columns["password"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnstaffid = new global::System.Data.DataColumn("staffid", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaffid);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columnposition = new global::System.Data.DataColumn("position", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnposition);
                this.columnemail = new global::System.Data.DataColumn("email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemail);
                this.columnpassword = new global::System.Data.DataColumn("password", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpassword);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnstaffid}, true));
                this.columnstaffid.AllowDBNull = false;
                this.columnstaffid.Unique = true;
                this.columnname.AllowDBNull = false;
                this.columnname.MaxLength = 255;
                this.columnposition.AllowDBNull = false;
                this.columnposition.MaxLength = 255;
                this.columnemail.AllowDBNull = false;
                this.columnemail.MaxLength = 255;
                this.columnpassword.AllowDBNull = false;
                this.columnpassword.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public rgo_staffsRow Newrgo_staffsRow() {
                return ((rgo_staffsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new rgo_staffsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(rgo_staffsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.rgo_staffsRowChanged != null)) {
                    this.rgo_staffsRowChanged(this, new rgo_staffsRowChangeEvent(((rgo_staffsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.rgo_staffsRowChanging != null)) {
                    this.rgo_staffsRowChanging(this, new rgo_staffsRowChangeEvent(((rgo_staffsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.rgo_staffsRowDeleted != null)) {
                    this.rgo_staffsRowDeleted(this, new rgo_staffsRowChangeEvent(((rgo_staffsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.rgo_staffsRowDeleting != null)) {
                    this.rgo_staffsRowDeleting(this, new rgo_staffsRowChangeEvent(((rgo_staffsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Removergo_staffsRow(rgo_staffsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RGO_LIPADataSet ds = new RGO_LIPADataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "rgo_staffsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class studentDataTable : global::System.Data.TypedTableBase<studentRow> {
            
            private global::System.Data.DataColumn columnsrcode;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columndepartment;
            
            private global::System.Data.DataColumn columnemail;
            
            private global::System.Data.DataColumn columnpassword;
            
            private global::System.Data.DataColumn columnprofile_image;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public studentDataTable() {
                this.TableName = "student";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal studentDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected studentDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn srcodeColumn {
                get {
                    return this.columnsrcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn departmentColumn {
                get {
                    return this.columndepartment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn emailColumn {
                get {
                    return this.columnemail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn passwordColumn {
                get {
                    return this.columnpassword;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn profile_imageColumn {
                get {
                    return this.columnprofile_image;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public studentRow this[int index] {
                get {
                    return ((studentRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event studentRowChangeEventHandler studentRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event studentRowChangeEventHandler studentRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event studentRowChangeEventHandler studentRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event studentRowChangeEventHandler studentRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddstudentRow(studentRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public studentRow AddstudentRow(int srcode, string name, string department, string email, string password, uint profile_image) {
                studentRow rowstudentRow = ((studentRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        srcode,
                        name,
                        department,
                        email,
                        password,
                        profile_image};
                rowstudentRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowstudentRow);
                return rowstudentRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public studentRow FindBysrcode(int srcode) {
                return ((studentRow)(this.Rows.Find(new object[] {
                            srcode})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                studentDataTable cln = ((studentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new studentDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnsrcode = base.Columns["srcode"];
                this.columnname = base.Columns["name"];
                this.columndepartment = base.Columns["department"];
                this.columnemail = base.Columns["email"];
                this.columnpassword = base.Columns["password"];
                this.columnprofile_image = base.Columns["profile_image"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnsrcode = new global::System.Data.DataColumn("srcode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsrcode);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columndepartment = new global::System.Data.DataColumn("department", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndepartment);
                this.columnemail = new global::System.Data.DataColumn("email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemail);
                this.columnpassword = new global::System.Data.DataColumn("password", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpassword);
                this.columnprofile_image = new global::System.Data.DataColumn("profile_image", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprofile_image);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnsrcode}, true));
                this.columnsrcode.AllowDBNull = false;
                this.columnsrcode.Unique = true;
                this.columnname.AllowDBNull = false;
                this.columnname.MaxLength = 255;
                this.columndepartment.AllowDBNull = false;
                this.columndepartment.MaxLength = 255;
                this.columnemail.AllowDBNull = false;
                this.columnemail.MaxLength = 255;
                this.columnpassword.AllowDBNull = false;
                this.columnpassword.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public studentRow NewstudentRow() {
                return ((studentRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new studentRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(studentRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.studentRowChanged != null)) {
                    this.studentRowChanged(this, new studentRowChangeEvent(((studentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.studentRowChanging != null)) {
                    this.studentRowChanging(this, new studentRowChangeEvent(((studentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.studentRowDeleted != null)) {
                    this.studentRowDeleted(this, new studentRowChangeEvent(((studentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.studentRowDeleting != null)) {
                    this.studentRowDeleting(this, new studentRowChangeEvent(((studentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemovestudentRow(studentRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RGO_LIPADataSet ds = new RGO_LIPADataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "studentDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class announcementRow : global::System.Data.DataRow {
            
            private announcementDataTable tableannouncement;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal announcementRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableannouncement = ((announcementDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int announcementid {
                get {
                    return ((int)(this[this.tableannouncement.announcementidColumn]));
                }
                set {
                    this[this.tableannouncement.announcementidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string title {
                get {
                    return ((string)(this[this.tableannouncement.titleColumn]));
                }
                set {
                    this[this.tableannouncement.titleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int staffid {
                get {
                    return ((int)(this[this.tableannouncement.staffidColumn]));
                }
                set {
                    this[this.tableannouncement.staffidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string announcement {
                get {
                    try {
                        return ((string)(this[this.tableannouncement.announcementColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'announcement\' in table \'announcement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableannouncement.announcementColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime dateannounced {
                get {
                    return ((global::System.DateTime)(this[this.tableannouncement.dateannouncedColumn]));
                }
                set {
                    this[this.tableannouncement.dateannouncedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsannouncementNull() {
                return this.IsNull(this.tableannouncement.announcementColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetannouncementNull() {
                this[this.tableannouncement.announcementColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class faqRow : global::System.Data.DataRow {
            
            private faqDataTable tablefaq;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal faqRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablefaq = ((faqDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int faqid {
                get {
                    return ((int)(this[this.tablefaq.faqidColumn]));
                }
                set {
                    this[this.tablefaq.faqidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string title {
                get {
                    return ((string)(this[this.tablefaq.titleColumn]));
                }
                set {
                    this[this.tablefaq.titleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int staffid {
                get {
                    return ((int)(this[this.tablefaq.staffidColumn]));
                }
                set {
                    this[this.tablefaq.staffidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string faq {
                get {
                    try {
                        return ((string)(this[this.tablefaq.faqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'faq\' in table \'faq\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefaq.faqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime datefaq {
                get {
                    return ((global::System.DateTime)(this[this.tablefaq.datefaqColumn]));
                }
                set {
                    this[this.tablefaq.datefaqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsfaqNull() {
                return this.IsNull(this.tablefaq.faqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetfaqNull() {
                this[this.tablefaq.faqColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class feedbacksRow : global::System.Data.DataRow {
            
            private feedbacksDataTable tablefeedbacks;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal feedbacksRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablefeedbacks = ((feedbacksDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int fbid {
                get {
                    return ((int)(this[this.tablefeedbacks.fbidColumn]));
                }
                set {
                    this[this.tablefeedbacks.fbidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int srcode {
                get {
                    return ((int)(this[this.tablefeedbacks.srcodeColumn]));
                }
                set {
                    this[this.tablefeedbacks.srcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string feedbacks {
                get {
                    try {
                        return ((string)(this[this.tablefeedbacks.feedbacksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'feedbacks\' in table \'feedbacks\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefeedbacks.feedbacksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime datefb {
                get {
                    return ((global::System.DateTime)(this[this.tablefeedbacks.datefbColumn]));
                }
                set {
                    this[this.tablefeedbacks.datefbColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsfeedbacksNull() {
                return this.IsNull(this.tablefeedbacks.feedbacksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetfeedbacksNull() {
                this[this.tablefeedbacks.feedbacksColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class itemRow : global::System.Data.DataRow {
            
            private itemDataTable tableitem;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal itemRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableitem = ((itemDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int itemid {
                get {
                    return ((int)(this[this.tableitem.itemidColumn]));
                }
                set {
                    this[this.tableitem.itemidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string nameofitem {
                get {
                    return ((string)(this[this.tableitem.nameofitemColumn]));
                }
                set {
                    this[this.tableitem.nameofitemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string sizeofitem {
                get {
                    return ((string)(this[this.tableitem.sizeofitemColumn]));
                }
                set {
                    this[this.tableitem.sizeofitemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal price {
                get {
                    return ((decimal)(this[this.tableitem.priceColumn]));
                }
                set {
                    this[this.tableitem.priceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string description {
                get {
                    try {
                        return ((string)(this[this.tableitem.descriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'description\' in table \'item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitem.descriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int availablestocks {
                get {
                    return ((int)(this[this.tableitem.availablestocksColumn]));
                }
                set {
                    this[this.tableitem.availablestocksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime last_updated {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableitem.last_updatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'last_updated\' in table \'item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitem.last_updatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsdescriptionNull() {
                return this.IsNull(this.tableitem.descriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetdescriptionNull() {
                this[this.tableitem.descriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Islast_updatedNull() {
                return this.IsNull(this.tableitem.last_updatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setlast_updatedNull() {
                this[this.tableitem.last_updatedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class order_tableRow : global::System.Data.DataRow {
            
            private order_tableDataTable tableorder_table;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal order_tableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableorder_table = ((order_tableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int orderid {
                get {
                    return ((int)(this[this.tableorder_table.orderidColumn]));
                }
                set {
                    this[this.tableorder_table.orderidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime dateordered {
                get {
                    return ((global::System.DateTime)(this[this.tableorder_table.dateorderedColumn]));
                }
                set {
                    this[this.tableorder_table.dateorderedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int srcode {
                get {
                    return ((int)(this[this.tableorder_table.srcodeColumn]));
                }
                set {
                    this[this.tableorder_table.srcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int itemid {
                get {
                    return ((int)(this[this.tableorder_table.itemidColumn]));
                }
                set {
                    this[this.tableorder_table.itemidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal price {
                get {
                    return ((decimal)(this[this.tableorder_table.priceColumn]));
                }
                set {
                    this[this.tableorder_table.priceColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class other_staffsRow : global::System.Data.DataRow {
            
            private other_staffsDataTable tableother_staffs;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal other_staffsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableother_staffs = ((other_staffsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int staffid {
                get {
                    return ((int)(this[this.tableother_staffs.staffidColumn]));
                }
                set {
                    this[this.tableother_staffs.staffidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string name {
                get {
                    return ((string)(this[this.tableother_staffs.nameColumn]));
                }
                set {
                    this[this.tableother_staffs.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string position {
                get {
                    return ((string)(this[this.tableother_staffs.positionColumn]));
                }
                set {
                    this[this.tableother_staffs.positionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string email {
                get {
                    return ((string)(this[this.tableother_staffs.emailColumn]));
                }
                set {
                    this[this.tableother_staffs.emailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string password {
                get {
                    return ((string)(this[this.tableother_staffs.passwordColumn]));
                }
                set {
                    this[this.tableother_staffs.passwordColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class paymentRow : global::System.Data.DataRow {
            
            private paymentDataTable tablepayment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal paymentRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablepayment = ((paymentDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int paymentid {
                get {
                    return ((int)(this[this.tablepayment.paymentidColumn]));
                }
                set {
                    this[this.tablepayment.paymentidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int orderid {
                get {
                    return ((int)(this[this.tablepayment.orderidColumn]));
                }
                set {
                    this[this.tablepayment.orderidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int staffid {
                get {
                    try {
                        return ((int)(this[this.tablepayment.staffidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'staffid\' in table \'payment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayment.staffidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime datepaid {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablepayment.datepaidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'datepaid\' in table \'payment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayment.datepaidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string note {
                get {
                    try {
                        return ((string)(this[this.tablepayment.noteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'note\' in table \'payment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayment.noteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsstaffidNull() {
                return this.IsNull(this.tablepayment.staffidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetstaffidNull() {
                this[this.tablepayment.staffidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsdatepaidNull() {
                return this.IsNull(this.tablepayment.datepaidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetdatepaidNull() {
                this[this.tablepayment.datepaidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsnoteNull() {
                return this.IsNull(this.tablepayment.noteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetnoteNull() {
                this[this.tablepayment.noteColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class rgo_staffsRow : global::System.Data.DataRow {
            
            private rgo_staffsDataTable tablergo_staffs;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal rgo_staffsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablergo_staffs = ((rgo_staffsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int staffid {
                get {
                    return ((int)(this[this.tablergo_staffs.staffidColumn]));
                }
                set {
                    this[this.tablergo_staffs.staffidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string name {
                get {
                    return ((string)(this[this.tablergo_staffs.nameColumn]));
                }
                set {
                    this[this.tablergo_staffs.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string position {
                get {
                    return ((string)(this[this.tablergo_staffs.positionColumn]));
                }
                set {
                    this[this.tablergo_staffs.positionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string email {
                get {
                    return ((string)(this[this.tablergo_staffs.emailColumn]));
                }
                set {
                    this[this.tablergo_staffs.emailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string password {
                get {
                    return ((string)(this[this.tablergo_staffs.passwordColumn]));
                }
                set {
                    this[this.tablergo_staffs.passwordColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class studentRow : global::System.Data.DataRow {
            
            private studentDataTable tablestudent;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal studentRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablestudent = ((studentDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int srcode {
                get {
                    return ((int)(this[this.tablestudent.srcodeColumn]));
                }
                set {
                    this[this.tablestudent.srcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string name {
                get {
                    return ((string)(this[this.tablestudent.nameColumn]));
                }
                set {
                    this[this.tablestudent.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string department {
                get {
                    return ((string)(this[this.tablestudent.departmentColumn]));
                }
                set {
                    this[this.tablestudent.departmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string email {
                get {
                    return ((string)(this[this.tablestudent.emailColumn]));
                }
                set {
                    this[this.tablestudent.emailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string password {
                get {
                    return ((string)(this[this.tablestudent.passwordColumn]));
                }
                set {
                    this[this.tablestudent.passwordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public uint profile_image {
                get {
                    try {
                        return ((uint)(this[this.tablestudent.profile_imageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'profile_image\' in table \'student\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestudent.profile_imageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isprofile_imageNull() {
                return this.IsNull(this.tablestudent.profile_imageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setprofile_imageNull() {
                this[this.tablestudent.profile_imageColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class announcementRowChangeEvent : global::System.EventArgs {
            
            private announcementRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public announcementRowChangeEvent(announcementRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public announcementRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class faqRowChangeEvent : global::System.EventArgs {
            
            private faqRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public faqRowChangeEvent(faqRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public faqRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class feedbacksRowChangeEvent : global::System.EventArgs {
            
            private feedbacksRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public feedbacksRowChangeEvent(feedbacksRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public feedbacksRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class itemRowChangeEvent : global::System.EventArgs {
            
            private itemRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public itemRowChangeEvent(itemRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public itemRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class order_tableRowChangeEvent : global::System.EventArgs {
            
            private order_tableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public order_tableRowChangeEvent(order_tableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public order_tableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class other_staffsRowChangeEvent : global::System.EventArgs {
            
            private other_staffsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public other_staffsRowChangeEvent(other_staffsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public other_staffsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class paymentRowChangeEvent : global::System.EventArgs {
            
            private paymentRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public paymentRowChangeEvent(paymentRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public paymentRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class rgo_staffsRowChangeEvent : global::System.EventArgs {
            
            private rgo_staffsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public rgo_staffsRowChangeEvent(rgo_staffsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public rgo_staffsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class studentRowChangeEvent : global::System.EventArgs {
            
            private studentRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public studentRowChangeEvent(studentRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public studentRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace RGO_LIPA_FINALPROJECT.RGO_LIPADataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class announcementTableAdapter : global::System.ComponentModel.Component {
        
        private global::Npgsql.NpgsqlDataAdapter _adapter;
        
        private global::Npgsql.NpgsqlConnection _connection;
        
        private global::Npgsql.NpgsqlTransaction _transaction;
        
        private global::Npgsql.NpgsqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public announcementTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Npgsql.NpgsqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Npgsql.NpgsqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Npgsql.NpgsqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Npgsql.NpgsqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "announcement";
            tableMapping.ColumnMappings.Add("announcementid", "announcementid");
            tableMapping.ColumnMappings.Add("title", "title");
            tableMapping.ColumnMappings.Add("staffid", "staffid");
            tableMapping.ColumnMappings.Add("announcement", "announcement");
            tableMapping.ColumnMappings.Add("dateannounced", "dateannounced");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""RGO_LIPA"".""public"".""announcement"" WHERE ((""announcementid"" = @Original_announcementid) AND (""title"" = @Original_title) AND (""staffid"" = @Original_staffid) AND ((@IsNull_announcement = 1 AND ""announcement"" IS NULL) OR (""announcement"" = @Original_announcement)) AND (""dateannounced"" = @Original_dateannounced))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Npgsql.NpgsqlParameter param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_announcementid";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "announcementid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_title";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "title";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_staffid";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "staffid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@IsNull_announcement";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "announcement";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_announcement";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "announcement";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_dateannounced";
            param.DbType = global::System.Data.DbType.DateTime;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "dateannounced";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"RGO_LIPA\".\"public\".\"announcement\" (\"title\", \"staffid\", \"announcement" +
                "\", \"dateannounced\") VALUES (@title, @staffid, @announcement, @dateannounced)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@title";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "title";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@staffid";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "staffid";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@announcement";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "announcement";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@dateannounced";
            param.DbType = global::System.Data.DbType.DateTime;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "dateannounced";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""RGO_LIPA"".""public"".""announcement"" SET ""title"" = @title, ""staffid"" = @staffid, ""announcement"" = @announcement, ""dateannounced"" = @dateannounced WHERE ((""announcementid"" = @Original_announcementid) AND (""title"" = @Original_title) AND (""staffid"" = @Original_staffid) AND ((@IsNull_announcement = 1 AND ""announcement"" IS NULL) OR (""announcement"" = @Original_announcement)) AND (""dateannounced"" = @Original_dateannounced))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@title";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "title";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@staffid";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "staffid";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@announcement";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "announcement";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@dateannounced";
            param.DbType = global::System.Data.DbType.DateTime;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "dateannounced";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_announcementid";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "announcementid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_title";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "title";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_staffid";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "staffid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@IsNull_announcement";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "announcement";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_announcement";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "announcement";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_dateannounced";
            param.DbType = global::System.Data.DbType.DateTime;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "dateannounced";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Npgsql.NpgsqlConnection();
            this._connection.ConnectionString = global::RGO_LIPA_FINALPROJECT.Properties.Settings.Default.RGO_LIPAConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Npgsql.NpgsqlCommand[1];
            this._commandCollection[0] = new global::Npgsql.NpgsqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"announcementid\", \"title\", \"staffid\", \"announcement\", \"dateannounced\" FROM" +
                " \"public\".\"announcement\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(RGO_LIPADataSet.announcementDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual RGO_LIPADataSet.announcementDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            RGO_LIPADataSet.announcementDataTable dataTable = new RGO_LIPADataSet.announcementDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(RGO_LIPADataSet.announcementDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(RGO_LIPADataSet dataSet) {
            return this.Adapter.Update(dataSet, "announcement");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int @Original_announcementid, string @Original_title, int @Original_staffid, string @Original_announcement, System.DateTime @Original_dateannounced) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(@Original_announcementid));
            if ((@Original_title == null)) {
                throw new global::System.ArgumentNullException("@Original_title");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(@Original_title));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(@Original_staffid));
            if ((@Original_announcement == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(@Original_announcement));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(@Original_dateannounced));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string @title, int @staffid, string @announcement, System.DateTime @dateannounced) {
            if ((@title == null)) {
                throw new global::System.ArgumentNullException("@title");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(@title));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(@staffid));
            if ((@announcement == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(@announcement));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(@dateannounced));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string @title, int @staffid, string @announcement, System.DateTime @dateannounced, int @Original_announcementid, string @Original_title, int @Original_staffid, string @Original_announcement, System.DateTime @Original_dateannounced) {
            if ((@title == null)) {
                throw new global::System.ArgumentNullException("@title");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(@title));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(@staffid));
            if ((@announcement == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(@announcement));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(@dateannounced));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(@Original_announcementid));
            if ((@Original_title == null)) {
                throw new global::System.ArgumentNullException("@Original_title");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(@Original_title));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(@Original_staffid));
            if ((@Original_announcement == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(@Original_announcement));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(@Original_dateannounced));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class faqTableAdapter : global::System.ComponentModel.Component {
        
        private global::Npgsql.NpgsqlDataAdapter _adapter;
        
        private global::Npgsql.NpgsqlConnection _connection;
        
        private global::Npgsql.NpgsqlTransaction _transaction;
        
        private global::Npgsql.NpgsqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public faqTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Npgsql.NpgsqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Npgsql.NpgsqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Npgsql.NpgsqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Npgsql.NpgsqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "faq";
            tableMapping.ColumnMappings.Add("faqid", "faqid");
            tableMapping.ColumnMappings.Add("title", "title");
            tableMapping.ColumnMappings.Add("staffid", "staffid");
            tableMapping.ColumnMappings.Add("faq", "faq");
            tableMapping.ColumnMappings.Add("datefaq", "datefaq");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"RGO_LIPA\".\"public\".\"faq\" WHERE ((\"faqid\" = @Original_faqid) AND (\"ti" +
                "tle\" = @Original_title) AND (\"staffid\" = @Original_staffid) AND ((@IsNull_faq = " +
                "1 AND \"faq\" IS NULL) OR (\"faq\" = @Original_faq)) AND (\"datefaq\" = @Original_date" +
                "faq))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Npgsql.NpgsqlParameter param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_faqid";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "faqid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_title";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "title";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_staffid";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "staffid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@IsNull_faq";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "faq";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_faq";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "faq";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_datefaq";
            param.DbType = global::System.Data.DbType.DateTime;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "datefaq";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"RGO_LIPA\".\"public\".\"faq\" (\"title\", \"staffid\", \"faq\", \"datefaq\") VALU" +
                "ES (@title, @staffid, @faq, @datefaq)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@title";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "title";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@staffid";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "staffid";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@faq";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "faq";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@datefaq";
            param.DbType = global::System.Data.DbType.DateTime;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "datefaq";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""RGO_LIPA"".""public"".""faq"" SET ""title"" = @title, ""staffid"" = @staffid, ""faq"" = @faq, ""datefaq"" = @datefaq WHERE ((""faqid"" = @Original_faqid) AND (""title"" = @Original_title) AND (""staffid"" = @Original_staffid) AND ((@IsNull_faq = 1 AND ""faq"" IS NULL) OR (""faq"" = @Original_faq)) AND (""datefaq"" = @Original_datefaq))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@title";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "title";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@staffid";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "staffid";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@faq";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "faq";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@datefaq";
            param.DbType = global::System.Data.DbType.DateTime;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "datefaq";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_faqid";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "faqid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_title";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "title";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_staffid";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "staffid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@IsNull_faq";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "faq";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_faq";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "faq";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_datefaq";
            param.DbType = global::System.Data.DbType.DateTime;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "datefaq";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Npgsql.NpgsqlConnection();
            this._connection.ConnectionString = global::RGO_LIPA_FINALPROJECT.Properties.Settings.Default.RGO_LIPAConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Npgsql.NpgsqlCommand[1];
            this._commandCollection[0] = new global::Npgsql.NpgsqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"faqid\", \"title\", \"staffid\", \"faq\", \"datefaq\" FROM \"public\".\"faq\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(RGO_LIPADataSet.faqDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual RGO_LIPADataSet.faqDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            RGO_LIPADataSet.faqDataTable dataTable = new RGO_LIPADataSet.faqDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(RGO_LIPADataSet.faqDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(RGO_LIPADataSet dataSet) {
            return this.Adapter.Update(dataSet, "faq");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int @Original_faqid, string @Original_title, int @Original_staffid, string @Original_faq, System.DateTime @Original_datefaq) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(@Original_faqid));
            if ((@Original_title == null)) {
                throw new global::System.ArgumentNullException("@Original_title");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(@Original_title));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(@Original_staffid));
            if ((@Original_faq == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(@Original_faq));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(@Original_datefaq));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string @title, int @staffid, string @faq, System.DateTime @datefaq) {
            if ((@title == null)) {
                throw new global::System.ArgumentNullException("@title");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(@title));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(@staffid));
            if ((@faq == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(@faq));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(@datefaq));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string @title, int @staffid, string @faq, System.DateTime @datefaq, int @Original_faqid, string @Original_title, int @Original_staffid, string @Original_faq, System.DateTime @Original_datefaq) {
            if ((@title == null)) {
                throw new global::System.ArgumentNullException("@title");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(@title));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(@staffid));
            if ((@faq == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(@faq));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(@datefaq));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(@Original_faqid));
            if ((@Original_title == null)) {
                throw new global::System.ArgumentNullException("@Original_title");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(@Original_title));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(@Original_staffid));
            if ((@Original_faq == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(@Original_faq));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(@Original_datefaq));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class feedbacksTableAdapter : global::System.ComponentModel.Component {
        
        private global::Npgsql.NpgsqlDataAdapter _adapter;
        
        private global::Npgsql.NpgsqlConnection _connection;
        
        private global::Npgsql.NpgsqlTransaction _transaction;
        
        private global::Npgsql.NpgsqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public feedbacksTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Npgsql.NpgsqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Npgsql.NpgsqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Npgsql.NpgsqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Npgsql.NpgsqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "feedbacks";
            tableMapping.ColumnMappings.Add("fbid", "fbid");
            tableMapping.ColumnMappings.Add("srcode", "srcode");
            tableMapping.ColumnMappings.Add("feedbacks", "feedbacks");
            tableMapping.ColumnMappings.Add("datefb", "datefb");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"RGO_LIPA\".\"public\".\"feedbacks\" WHERE ((\"fbid\" = @Original_fbid) AND " +
                "(\"srcode\" = @Original_srcode) AND ((@IsNull_feedbacks = 1 AND \"feedbacks\" IS NUL" +
                "L) OR (\"feedbacks\" = @Original_feedbacks)) AND (\"datefb\" = @Original_datefb))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Npgsql.NpgsqlParameter param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_fbid";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "fbid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_srcode";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "srcode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@IsNull_feedbacks";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "feedbacks";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_feedbacks";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "feedbacks";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_datefb";
            param.DbType = global::System.Data.DbType.DateTime;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "datefb";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"RGO_LIPA\".\"public\".\"feedbacks\" (\"srcode\", \"feedbacks\", \"datefb\") VAL" +
                "UES (@srcode, @feedbacks, @datefb)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@srcode";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "srcode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@feedbacks";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "feedbacks";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@datefb";
            param.DbType = global::System.Data.DbType.DateTime;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "datefb";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""RGO_LIPA"".""public"".""feedbacks"" SET ""srcode"" = @srcode, ""feedbacks"" = @feedbacks, ""datefb"" = @datefb WHERE ((""fbid"" = @Original_fbid) AND (""srcode"" = @Original_srcode) AND ((@IsNull_feedbacks = 1 AND ""feedbacks"" IS NULL) OR (""feedbacks"" = @Original_feedbacks)) AND (""datefb"" = @Original_datefb))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@srcode";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "srcode";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@feedbacks";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "feedbacks";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@datefb";
            param.DbType = global::System.Data.DbType.DateTime;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "datefb";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_fbid";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "fbid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_srcode";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "srcode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@IsNull_feedbacks";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "feedbacks";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_feedbacks";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "feedbacks";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_datefb";
            param.DbType = global::System.Data.DbType.DateTime;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "datefb";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Npgsql.NpgsqlConnection();
            this._connection.ConnectionString = global::RGO_LIPA_FINALPROJECT.Properties.Settings.Default.RGO_LIPAConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Npgsql.NpgsqlCommand[1];
            this._commandCollection[0] = new global::Npgsql.NpgsqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"fbid\", \"srcode\", \"feedbacks\", \"datefb\" FROM \"public\".\"feedbacks\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(RGO_LIPADataSet.feedbacksDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual RGO_LIPADataSet.feedbacksDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            RGO_LIPADataSet.feedbacksDataTable dataTable = new RGO_LIPADataSet.feedbacksDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(RGO_LIPADataSet.feedbacksDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(RGO_LIPADataSet dataSet) {
            return this.Adapter.Update(dataSet, "feedbacks");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int @Original_fbid, int @Original_srcode, string @Original_feedbacks, System.DateTime @Original_datefb) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(@Original_fbid));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(@Original_srcode));
            if ((@Original_feedbacks == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(@Original_feedbacks));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(@Original_datefb));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int @srcode, string @feedbacks, System.DateTime @datefb) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(@srcode));
            if ((@feedbacks == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(@feedbacks));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(@datefb));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int @srcode, string @feedbacks, System.DateTime @datefb, int @Original_fbid, int @Original_srcode, string @Original_feedbacks, System.DateTime @Original_datefb) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(@srcode));
            if ((@feedbacks == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(@feedbacks));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(@datefb));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(@Original_fbid));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(@Original_srcode));
            if ((@Original_feedbacks == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(@Original_feedbacks));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(@Original_datefb));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class itemTableAdapter : global::System.ComponentModel.Component {
        
        private global::Npgsql.NpgsqlDataAdapter _adapter;
        
        private global::Npgsql.NpgsqlConnection _connection;
        
        private global::Npgsql.NpgsqlTransaction _transaction;
        
        private global::Npgsql.NpgsqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public itemTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Npgsql.NpgsqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Npgsql.NpgsqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Npgsql.NpgsqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Npgsql.NpgsqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "item";
            tableMapping.ColumnMappings.Add("itemid", "itemid");
            tableMapping.ColumnMappings.Add("nameofitem", "nameofitem");
            tableMapping.ColumnMappings.Add("sizeofitem", "sizeofitem");
            tableMapping.ColumnMappings.Add("price", "price");
            tableMapping.ColumnMappings.Add("description", "description");
            tableMapping.ColumnMappings.Add("availablestocks", "availablestocks");
            tableMapping.ColumnMappings.Add("last_updated", "last_updated");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""RGO_LIPA"".""public"".""item"" WHERE ((""itemid"" = @Original_itemid) AND (""nameofitem"" = @Original_nameofitem) AND (""sizeofitem"" = @Original_sizeofitem) AND (""price"" = @Original_price) AND ((@IsNull_description = 1 AND ""description"" IS NULL) OR (""description"" = @Original_description)) AND (""availablestocks"" = @Original_availablestocks) AND ((@IsNull_last_updated = 1 AND ""last_updated"" IS NULL) OR (""last_updated"" = @Original_last_updated)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Npgsql.NpgsqlParameter param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_itemid";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "itemid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_nameofitem";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "nameofitem";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_sizeofitem";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "sizeofitem";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_price";
            param.DbType = global::System.Data.DbType.Decimal;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "price";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@IsNull_description";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "description";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_description";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "description";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_availablestocks";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "availablestocks";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@IsNull_last_updated";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "last_updated";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_last_updated";
            param.DbType = global::System.Data.DbType.DateTime;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "last_updated";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"RGO_LIPA\".\"public\".\"item\" (\"itemid\", \"nameofitem\", \"sizeofitem\", \"pr" +
                "ice\", \"description\", \"availablestocks\", \"last_updated\") VALUES (@itemid, @nameof" +
                "item, @sizeofitem, @price, @description, @availablestocks, @last_updated)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@itemid";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "itemid";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@nameofitem";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "nameofitem";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@sizeofitem";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "sizeofitem";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@price";
            param.DbType = global::System.Data.DbType.Decimal;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "price";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@description";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "description";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@availablestocks";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "availablestocks";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@last_updated";
            param.DbType = global::System.Data.DbType.DateTime;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "last_updated";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""RGO_LIPA"".""public"".""item"" SET ""itemid"" = @itemid, ""nameofitem"" = @nameofitem, ""sizeofitem"" = @sizeofitem, ""price"" = @price, ""description"" = @description, ""availablestocks"" = @availablestocks, ""last_updated"" = @last_updated WHERE ((""itemid"" = @Original_itemid) AND (""nameofitem"" = @Original_nameofitem) AND (""sizeofitem"" = @Original_sizeofitem) AND (""price"" = @Original_price) AND ((@IsNull_description = 1 AND ""description"" IS NULL) OR (""description"" = @Original_description)) AND (""availablestocks"" = @Original_availablestocks) AND ((@IsNull_last_updated = 1 AND ""last_updated"" IS NULL) OR (""last_updated"" = @Original_last_updated)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@itemid";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "itemid";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@nameofitem";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "nameofitem";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@sizeofitem";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "sizeofitem";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@price";
            param.DbType = global::System.Data.DbType.Decimal;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "price";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@description";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "description";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@availablestocks";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "availablestocks";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@last_updated";
            param.DbType = global::System.Data.DbType.DateTime;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "last_updated";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_itemid";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "itemid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_nameofitem";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "nameofitem";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_sizeofitem";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "sizeofitem";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_price";
            param.DbType = global::System.Data.DbType.Decimal;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "price";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@IsNull_description";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "description";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_description";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "description";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_availablestocks";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "availablestocks";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@IsNull_last_updated";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "last_updated";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_last_updated";
            param.DbType = global::System.Data.DbType.DateTime;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "last_updated";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Npgsql.NpgsqlConnection();
            this._connection.ConnectionString = global::RGO_LIPA_FINALPROJECT.Properties.Settings.Default.RGO_LIPAConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Npgsql.NpgsqlCommand[1];
            this._commandCollection[0] = new global::Npgsql.NpgsqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"itemid\", \"nameofitem\", \"sizeofitem\", \"price\", \"description\", \"availablest" +
                "ocks\", \"last_updated\" FROM \"public\".\"item\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(RGO_LIPADataSet.itemDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual RGO_LIPADataSet.itemDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            RGO_LIPADataSet.itemDataTable dataTable = new RGO_LIPADataSet.itemDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(RGO_LIPADataSet.itemDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(RGO_LIPADataSet dataSet) {
            return this.Adapter.Update(dataSet, "item");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int @Original_itemid, string @Original_nameofitem, string @Original_sizeofitem, decimal @Original_price, string @Original_description, int @Original_availablestocks, global::System.Nullable<global::System.DateTime> @Original_last_updated) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(@Original_itemid));
            if ((@Original_nameofitem == null)) {
                throw new global::System.ArgumentNullException("@Original_nameofitem");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(@Original_nameofitem));
            }
            if ((@Original_sizeofitem == null)) {
                throw new global::System.ArgumentNullException("@Original_sizeofitem");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(@Original_sizeofitem));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(@Original_price));
            if ((@Original_description == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(@Original_description));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(@Original_availablestocks));
            if ((@Original_last_updated.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(@Original_last_updated.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int @itemid, string @nameofitem, string @sizeofitem, decimal @price, string @description, int @availablestocks, global::System.Nullable<global::System.DateTime> @last_updated) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(@itemid));
            if ((@nameofitem == null)) {
                throw new global::System.ArgumentNullException("@nameofitem");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(@nameofitem));
            }
            if ((@sizeofitem == null)) {
                throw new global::System.ArgumentNullException("@sizeofitem");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(@sizeofitem));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(@price));
            if ((@description == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(@description));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(@availablestocks));
            if ((@last_updated.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(@last_updated.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int @itemid, string @nameofitem, string @sizeofitem, decimal @price, string @description, int @availablestocks, global::System.Nullable<global::System.DateTime> @last_updated, int @Original_itemid, string @Original_nameofitem, string @Original_sizeofitem, decimal @Original_price, string @Original_description, int @Original_availablestocks, global::System.Nullable<global::System.DateTime> @Original_last_updated) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(@itemid));
            if ((@nameofitem == null)) {
                throw new global::System.ArgumentNullException("@nameofitem");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(@nameofitem));
            }
            if ((@sizeofitem == null)) {
                throw new global::System.ArgumentNullException("@sizeofitem");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(@sizeofitem));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(@price));
            if ((@description == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(@description));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(@availablestocks));
            if ((@last_updated.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(@last_updated.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(@Original_itemid));
            if ((@Original_nameofitem == null)) {
                throw new global::System.ArgumentNullException("@Original_nameofitem");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(@Original_nameofitem));
            }
            if ((@Original_sizeofitem == null)) {
                throw new global::System.ArgumentNullException("@Original_sizeofitem");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(@Original_sizeofitem));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(@Original_price));
            if ((@Original_description == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(@Original_description));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(@Original_availablestocks));
            if ((@Original_last_updated.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(@Original_last_updated.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string @nameofitem, string @sizeofitem, decimal @price, string @description, int @availablestocks, global::System.Nullable<global::System.DateTime> @last_updated, int @Original_itemid, string @Original_nameofitem, string @Original_sizeofitem, decimal @Original_price, string @Original_description, int @Original_availablestocks, global::System.Nullable<global::System.DateTime> @Original_last_updated) {
            return this.Update(@Original_itemid, @nameofitem, @sizeofitem, @price, @description, @availablestocks, @last_updated, @Original_itemid, @Original_nameofitem, @Original_sizeofitem, @Original_price, @Original_description, @Original_availablestocks, @Original_last_updated);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class order_tableTableAdapter : global::System.ComponentModel.Component {
        
        private global::Npgsql.NpgsqlDataAdapter _adapter;
        
        private global::Npgsql.NpgsqlConnection _connection;
        
        private global::Npgsql.NpgsqlTransaction _transaction;
        
        private global::Npgsql.NpgsqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public order_tableTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Npgsql.NpgsqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Npgsql.NpgsqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Npgsql.NpgsqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Npgsql.NpgsqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "order_table";
            tableMapping.ColumnMappings.Add("orderid", "orderid");
            tableMapping.ColumnMappings.Add("dateordered", "dateordered");
            tableMapping.ColumnMappings.Add("srcode", "srcode");
            tableMapping.ColumnMappings.Add("itemid", "itemid");
            tableMapping.ColumnMappings.Add("price", "price");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"RGO_LIPA\".\"public\".\"order_table\" WHERE ((\"orderid\" = @Original_order" +
                "id) AND (\"dateordered\" = @Original_dateordered) AND (\"srcode\" = @Original_srcode" +
                ") AND (\"itemid\" = @Original_itemid) AND (\"price\" = @Original_price))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Npgsql.NpgsqlParameter param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_orderid";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "orderid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_dateordered";
            param.DbType = global::System.Data.DbType.DateTime;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "dateordered";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_srcode";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "srcode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_itemid";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "itemid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_price";
            param.DbType = global::System.Data.DbType.Decimal;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "price";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"RGO_LIPA\".\"public\".\"order_table\" (\"dateordered\", \"srcode\", \"itemid\"," +
                " \"price\") VALUES (@dateordered, @srcode, @itemid, @price)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@dateordered";
            param.DbType = global::System.Data.DbType.DateTime;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "dateordered";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@srcode";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "srcode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@itemid";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "itemid";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@price";
            param.DbType = global::System.Data.DbType.Decimal;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "price";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""RGO_LIPA"".""public"".""order_table"" SET ""dateordered"" = @dateordered, ""srcode"" = @srcode, ""itemid"" = @itemid, ""price"" = @price WHERE ((""orderid"" = @Original_orderid) AND (""dateordered"" = @Original_dateordered) AND (""srcode"" = @Original_srcode) AND (""itemid"" = @Original_itemid) AND (""price"" = @Original_price))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@dateordered";
            param.DbType = global::System.Data.DbType.DateTime;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "dateordered";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@srcode";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "srcode";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@itemid";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "itemid";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@price";
            param.DbType = global::System.Data.DbType.Decimal;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "price";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_orderid";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "orderid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_dateordered";
            param.DbType = global::System.Data.DbType.DateTime;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "dateordered";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_srcode";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "srcode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_itemid";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "itemid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_price";
            param.DbType = global::System.Data.DbType.Decimal;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "price";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Npgsql.NpgsqlConnection();
            this._connection.ConnectionString = global::RGO_LIPA_FINALPROJECT.Properties.Settings.Default.RGO_LIPAConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Npgsql.NpgsqlCommand[1];
            this._commandCollection[0] = new global::Npgsql.NpgsqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"orderid\", \"dateordered\", \"srcode\", \"itemid\", \"price\" FROM \"public\".\"order" +
                "_table\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(RGO_LIPADataSet.order_tableDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual RGO_LIPADataSet.order_tableDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            RGO_LIPADataSet.order_tableDataTable dataTable = new RGO_LIPADataSet.order_tableDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(RGO_LIPADataSet.order_tableDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(RGO_LIPADataSet dataSet) {
            return this.Adapter.Update(dataSet, "order_table");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int @Original_orderid, System.DateTime @Original_dateordered, int @Original_srcode, int @Original_itemid, decimal @Original_price) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(@Original_orderid));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(@Original_dateordered));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(@Original_srcode));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(@Original_itemid));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(@Original_price));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.DateTime @dateordered, int @srcode, int @itemid, decimal @price) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(@dateordered));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(@srcode));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(@itemid));
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(@price));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.DateTime @dateordered, int @srcode, int @itemid, decimal @price, int @Original_orderid, System.DateTime @Original_dateordered, int @Original_srcode, int @Original_itemid, decimal @Original_price) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(@dateordered));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(@srcode));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(@itemid));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(@price));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(@Original_orderid));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(@Original_dateordered));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(@Original_srcode));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(@Original_itemid));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(@Original_price));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class other_staffsTableAdapter : global::System.ComponentModel.Component {
        
        private global::Npgsql.NpgsqlDataAdapter _adapter;
        
        private global::Npgsql.NpgsqlConnection _connection;
        
        private global::Npgsql.NpgsqlTransaction _transaction;
        
        private global::Npgsql.NpgsqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public other_staffsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Npgsql.NpgsqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Npgsql.NpgsqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Npgsql.NpgsqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Npgsql.NpgsqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "other_staffs";
            tableMapping.ColumnMappings.Add("staffid", "staffid");
            tableMapping.ColumnMappings.Add("name", "name");
            tableMapping.ColumnMappings.Add("position", "position");
            tableMapping.ColumnMappings.Add("email", "email");
            tableMapping.ColumnMappings.Add("password", "password");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"RGO_LIPA\".\"public\".\"other_staffs\" WHERE ((\"staffid\" = @Original_staf" +
                "fid) AND (\"name\" = @Original_name) AND (\"position\" = @Original_position) AND (\"e" +
                "mail\" = @Original_email) AND (\"password\" = @Original_password))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Npgsql.NpgsqlParameter param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_staffid";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "staffid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_name";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_position";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "position";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_email";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "email";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_password";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "password";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"RGO_LIPA\".\"public\".\"other_staffs\" (\"staffid\", \"name\", \"position\", \"e" +
                "mail\", \"password\") VALUES (@staffid, @name, @position, @email, @password)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@staffid";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "staffid";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@name";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "name";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@position";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "position";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@email";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "email";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@password";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "password";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""RGO_LIPA"".""public"".""other_staffs"" SET ""staffid"" = @staffid, ""name"" = @name, ""position"" = @position, ""email"" = @email, ""password"" = @password WHERE ((""staffid"" = @Original_staffid) AND (""name"" = @Original_name) AND (""position"" = @Original_position) AND (""email"" = @Original_email) AND (""password"" = @Original_password))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@staffid";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "staffid";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@name";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "name";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@position";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "position";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@email";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "email";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@password";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "password";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_staffid";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "staffid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_name";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_position";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "position";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_email";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "email";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_password";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "password";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Npgsql.NpgsqlConnection();
            this._connection.ConnectionString = global::RGO_LIPA_FINALPROJECT.Properties.Settings.Default.RGO_LIPAConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Npgsql.NpgsqlCommand[1];
            this._commandCollection[0] = new global::Npgsql.NpgsqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"staffid\", \"name\", \"position\", \"email\", \"password\" FROM \"public\".\"other_st" +
                "affs\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(RGO_LIPADataSet.other_staffsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual RGO_LIPADataSet.other_staffsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            RGO_LIPADataSet.other_staffsDataTable dataTable = new RGO_LIPADataSet.other_staffsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(RGO_LIPADataSet.other_staffsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(RGO_LIPADataSet dataSet) {
            return this.Adapter.Update(dataSet, "other_staffs");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int @Original_staffid, string @Original_name, string @Original_position, string @Original_email, string @Original_password) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(@Original_staffid));
            if ((@Original_name == null)) {
                throw new global::System.ArgumentNullException("@Original_name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(@Original_name));
            }
            if ((@Original_position == null)) {
                throw new global::System.ArgumentNullException("@Original_position");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(@Original_position));
            }
            if ((@Original_email == null)) {
                throw new global::System.ArgumentNullException("@Original_email");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(@Original_email));
            }
            if ((@Original_password == null)) {
                throw new global::System.ArgumentNullException("@Original_password");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(@Original_password));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int @staffid, string @name, string @position, string @email, string @password) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(@staffid));
            if ((@name == null)) {
                throw new global::System.ArgumentNullException("@name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(@name));
            }
            if ((@position == null)) {
                throw new global::System.ArgumentNullException("@position");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(@position));
            }
            if ((@email == null)) {
                throw new global::System.ArgumentNullException("@email");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(@email));
            }
            if ((@password == null)) {
                throw new global::System.ArgumentNullException("@password");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(@password));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int @staffid, string @name, string @position, string @email, string @password, int @Original_staffid, string @Original_name, string @Original_position, string @Original_email, string @Original_password) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(@staffid));
            if ((@name == null)) {
                throw new global::System.ArgumentNullException("@name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(@name));
            }
            if ((@position == null)) {
                throw new global::System.ArgumentNullException("@position");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(@position));
            }
            if ((@email == null)) {
                throw new global::System.ArgumentNullException("@email");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(@email));
            }
            if ((@password == null)) {
                throw new global::System.ArgumentNullException("@password");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(@password));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(@Original_staffid));
            if ((@Original_name == null)) {
                throw new global::System.ArgumentNullException("@Original_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(@Original_name));
            }
            if ((@Original_position == null)) {
                throw new global::System.ArgumentNullException("@Original_position");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(@Original_position));
            }
            if ((@Original_email == null)) {
                throw new global::System.ArgumentNullException("@Original_email");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(@Original_email));
            }
            if ((@Original_password == null)) {
                throw new global::System.ArgumentNullException("@Original_password");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(@Original_password));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string @name, string @position, string @email, string @password, int @Original_staffid, string @Original_name, string @Original_position, string @Original_email, string @Original_password) {
            return this.Update(@Original_staffid, @name, @position, @email, @password, @Original_staffid, @Original_name, @Original_position, @Original_email, @Original_password);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class paymentTableAdapter : global::System.ComponentModel.Component {
        
        private global::Npgsql.NpgsqlDataAdapter _adapter;
        
        private global::Npgsql.NpgsqlConnection _connection;
        
        private global::Npgsql.NpgsqlTransaction _transaction;
        
        private global::Npgsql.NpgsqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public paymentTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Npgsql.NpgsqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Npgsql.NpgsqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Npgsql.NpgsqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Npgsql.NpgsqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "payment";
            tableMapping.ColumnMappings.Add("paymentid", "paymentid");
            tableMapping.ColumnMappings.Add("orderid", "orderid");
            tableMapping.ColumnMappings.Add("staffid", "staffid");
            tableMapping.ColumnMappings.Add("datepaid", "datepaid");
            tableMapping.ColumnMappings.Add("note", "note");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""RGO_LIPA"".""public"".""payment"" WHERE ((""paymentid"" = @Original_paymentid) AND (""orderid"" = @Original_orderid) AND ((@IsNull_staffid = 1 AND ""staffid"" IS NULL) OR (""staffid"" = @Original_staffid)) AND ((@IsNull_datepaid = 1 AND ""datepaid"" IS NULL) OR (""datepaid"" = @Original_datepaid)) AND ((@IsNull_note = 1 AND ""note"" IS NULL) OR (""note"" = @Original_note)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Npgsql.NpgsqlParameter param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_paymentid";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "paymentid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_orderid";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "orderid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@IsNull_staffid";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "staffid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_staffid";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "staffid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@IsNull_datepaid";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "datepaid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_datepaid";
            param.DbType = global::System.Data.DbType.Date;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "datepaid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@IsNull_note";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "note";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_note";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "note";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"RGO_LIPA\".\"public\".\"payment\" (\"orderid\", \"staffid\", \"datepaid\", \"not" +
                "e\") VALUES (@orderid, @staffid, @datepaid, @note)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@orderid";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "orderid";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@staffid";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "staffid";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@datepaid";
            param.DbType = global::System.Data.DbType.Date;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "datepaid";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@note";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "note";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""RGO_LIPA"".""public"".""payment"" SET ""orderid"" = @orderid, ""staffid"" = @staffid, ""datepaid"" = @datepaid, ""note"" = @note WHERE ((""paymentid"" = @Original_paymentid) AND (""orderid"" = @Original_orderid) AND ((@IsNull_staffid = 1 AND ""staffid"" IS NULL) OR (""staffid"" = @Original_staffid)) AND ((@IsNull_datepaid = 1 AND ""datepaid"" IS NULL) OR (""datepaid"" = @Original_datepaid)) AND ((@IsNull_note = 1 AND ""note"" IS NULL) OR (""note"" = @Original_note)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@orderid";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "orderid";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@staffid";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "staffid";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@datepaid";
            param.DbType = global::System.Data.DbType.Date;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "datepaid";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@note";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "note";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_paymentid";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "paymentid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_orderid";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "orderid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@IsNull_staffid";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "staffid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_staffid";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "staffid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@IsNull_datepaid";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "datepaid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_datepaid";
            param.DbType = global::System.Data.DbType.Date;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "datepaid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@IsNull_note";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "note";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_note";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "note";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Npgsql.NpgsqlConnection();
            this._connection.ConnectionString = global::RGO_LIPA_FINALPROJECT.Properties.Settings.Default.RGO_LIPAConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Npgsql.NpgsqlCommand[1];
            this._commandCollection[0] = new global::Npgsql.NpgsqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"paymentid\", \"orderid\", \"staffid\", \"datepaid\", \"note\" FROM \"public\".\"payme" +
                "nt\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(RGO_LIPADataSet.paymentDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual RGO_LIPADataSet.paymentDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            RGO_LIPADataSet.paymentDataTable dataTable = new RGO_LIPADataSet.paymentDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(RGO_LIPADataSet.paymentDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(RGO_LIPADataSet dataSet) {
            return this.Adapter.Update(dataSet, "payment");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int @Original_paymentid, int @Original_orderid, global::System.Nullable<int> @Original_staffid, global::System.Nullable<global::System.DateTime> @Original_datepaid, string @Original_note) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(@Original_paymentid));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(@Original_orderid));
            if ((@Original_staffid.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(@Original_staffid.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((@Original_datepaid.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(@Original_datepaid.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((@Original_note == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(@Original_note));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int @orderid, global::System.Nullable<int> @staffid, global::System.Nullable<global::System.DateTime> @datepaid, string @note) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(@orderid));
            if ((@staffid.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(@staffid.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((@datepaid.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(@datepaid.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((@note == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(@note));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int @orderid, global::System.Nullable<int> @staffid, global::System.Nullable<global::System.DateTime> @datepaid, string @note, int @Original_paymentid, int @Original_orderid, global::System.Nullable<int> @Original_staffid, global::System.Nullable<global::System.DateTime> @Original_datepaid, string @Original_note) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(@orderid));
            if ((@staffid.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(@staffid.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((@datepaid.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(@datepaid.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((@note == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(@note));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(@Original_paymentid));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(@Original_orderid));
            if ((@Original_staffid.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(@Original_staffid.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((@Original_datepaid.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(@Original_datepaid.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((@Original_note == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(@Original_note));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class rgo_staffsTableAdapter : global::System.ComponentModel.Component {
        
        private global::Npgsql.NpgsqlDataAdapter _adapter;
        
        private global::Npgsql.NpgsqlConnection _connection;
        
        private global::Npgsql.NpgsqlTransaction _transaction;
        
        private global::Npgsql.NpgsqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public rgo_staffsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Npgsql.NpgsqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Npgsql.NpgsqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Npgsql.NpgsqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Npgsql.NpgsqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "rgo_staffs";
            tableMapping.ColumnMappings.Add("staffid", "staffid");
            tableMapping.ColumnMappings.Add("name", "name");
            tableMapping.ColumnMappings.Add("position", "position");
            tableMapping.ColumnMappings.Add("email", "email");
            tableMapping.ColumnMappings.Add("password", "password");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"RGO_LIPA\".\"public\".\"rgo_staffs\" WHERE ((\"staffid\" = @Original_staffi" +
                "d) AND (\"name\" = @Original_name) AND (\"position\" = @Original_position) AND (\"ema" +
                "il\" = @Original_email) AND (\"password\" = @Original_password))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Npgsql.NpgsqlParameter param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_staffid";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "staffid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_name";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_position";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "position";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_email";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "email";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_password";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "password";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"RGO_LIPA\".\"public\".\"rgo_staffs\" (\"staffid\", \"name\", \"position\", \"ema" +
                "il\", \"password\") VALUES (@staffid, @name, @position, @email, @password)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@staffid";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "staffid";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@name";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "name";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@position";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "position";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@email";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "email";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@password";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "password";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""RGO_LIPA"".""public"".""rgo_staffs"" SET ""staffid"" = @staffid, ""name"" = @name, ""position"" = @position, ""email"" = @email, ""password"" = @password WHERE ((""staffid"" = @Original_staffid) AND (""name"" = @Original_name) AND (""position"" = @Original_position) AND (""email"" = @Original_email) AND (""password"" = @Original_password))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@staffid";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "staffid";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@name";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "name";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@position";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "position";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@email";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "email";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@password";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "password";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_staffid";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "staffid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_name";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_position";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "position";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_email";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "email";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_password";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "password";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Npgsql.NpgsqlConnection();
            this._connection.ConnectionString = global::RGO_LIPA_FINALPROJECT.Properties.Settings.Default.RGO_LIPAConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Npgsql.NpgsqlCommand[1];
            this._commandCollection[0] = new global::Npgsql.NpgsqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"staffid\", \"name\", \"position\", \"email\", \"password\" FROM \"public\".\"rgo_staf" +
                "fs\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(RGO_LIPADataSet.rgo_staffsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual RGO_LIPADataSet.rgo_staffsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            RGO_LIPADataSet.rgo_staffsDataTable dataTable = new RGO_LIPADataSet.rgo_staffsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(RGO_LIPADataSet.rgo_staffsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(RGO_LIPADataSet dataSet) {
            return this.Adapter.Update(dataSet, "rgo_staffs");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int @Original_staffid, string @Original_name, string @Original_position, string @Original_email, string @Original_password) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(@Original_staffid));
            if ((@Original_name == null)) {
                throw new global::System.ArgumentNullException("@Original_name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(@Original_name));
            }
            if ((@Original_position == null)) {
                throw new global::System.ArgumentNullException("@Original_position");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(@Original_position));
            }
            if ((@Original_email == null)) {
                throw new global::System.ArgumentNullException("@Original_email");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(@Original_email));
            }
            if ((@Original_password == null)) {
                throw new global::System.ArgumentNullException("@Original_password");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(@Original_password));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int @staffid, string @name, string @position, string @email, string @password) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(@staffid));
            if ((@name == null)) {
                throw new global::System.ArgumentNullException("@name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(@name));
            }
            if ((@position == null)) {
                throw new global::System.ArgumentNullException("@position");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(@position));
            }
            if ((@email == null)) {
                throw new global::System.ArgumentNullException("@email");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(@email));
            }
            if ((@password == null)) {
                throw new global::System.ArgumentNullException("@password");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(@password));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int @staffid, string @name, string @position, string @email, string @password, int @Original_staffid, string @Original_name, string @Original_position, string @Original_email, string @Original_password) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(@staffid));
            if ((@name == null)) {
                throw new global::System.ArgumentNullException("@name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(@name));
            }
            if ((@position == null)) {
                throw new global::System.ArgumentNullException("@position");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(@position));
            }
            if ((@email == null)) {
                throw new global::System.ArgumentNullException("@email");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(@email));
            }
            if ((@password == null)) {
                throw new global::System.ArgumentNullException("@password");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(@password));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(@Original_staffid));
            if ((@Original_name == null)) {
                throw new global::System.ArgumentNullException("@Original_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(@Original_name));
            }
            if ((@Original_position == null)) {
                throw new global::System.ArgumentNullException("@Original_position");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(@Original_position));
            }
            if ((@Original_email == null)) {
                throw new global::System.ArgumentNullException("@Original_email");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(@Original_email));
            }
            if ((@Original_password == null)) {
                throw new global::System.ArgumentNullException("@Original_password");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(@Original_password));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string @name, string @position, string @email, string @password, int @Original_staffid, string @Original_name, string @Original_position, string @Original_email, string @Original_password) {
            return this.Update(@Original_staffid, @name, @position, @email, @password, @Original_staffid, @Original_name, @Original_position, @Original_email, @Original_password);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class studentTableAdapter : global::System.ComponentModel.Component {
        
        private global::Npgsql.NpgsqlDataAdapter _adapter;
        
        private global::Npgsql.NpgsqlConnection _connection;
        
        private global::Npgsql.NpgsqlTransaction _transaction;
        
        private global::Npgsql.NpgsqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public studentTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Npgsql.NpgsqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Npgsql.NpgsqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Npgsql.NpgsqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Npgsql.NpgsqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "student";
            tableMapping.ColumnMappings.Add("srcode", "srcode");
            tableMapping.ColumnMappings.Add("name", "name");
            tableMapping.ColumnMappings.Add("department", "department");
            tableMapping.ColumnMappings.Add("email", "email");
            tableMapping.ColumnMappings.Add("password", "password");
            tableMapping.ColumnMappings.Add("profile_image", "profile_image");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""RGO_LIPA"".""public"".""student"" WHERE ((""srcode"" = @Original_srcode) AND (""name"" = @Original_name) AND (""department"" = @Original_department) AND (""email"" = @Original_email) AND (""password"" = @Original_password) AND ((@IsNull_profile_image = 1 AND ""profile_image"" IS NULL) OR (""profile_image"" = @Original_profile_image)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Npgsql.NpgsqlParameter param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_srcode";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "srcode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_name";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_department";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "department";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_email";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "email";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_password";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "password";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@IsNull_profile_image";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "profile_image";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_profile_image";
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Oid;
            param.IsNullable = true;
            param.SourceColumn = "profile_image";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"RGO_LIPA\".\"public\".\"student\" (\"srcode\", \"name\", \"department\", \"email" +
                "\", \"password\", \"profile_image\") VALUES (@srcode, @name, @department, @email, @pa" +
                "ssword, @profile_image)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@srcode";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "srcode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@name";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "name";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@department";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "department";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@email";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "email";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@password";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "password";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@profile_image";
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Oid;
            param.IsNullable = true;
            param.SourceColumn = "profile_image";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""RGO_LIPA"".""public"".""student"" SET ""srcode"" = @srcode, ""name"" = @name, ""department"" = @department, ""email"" = @email, ""password"" = @password, ""profile_image"" = @profile_image WHERE ((""srcode"" = @Original_srcode) AND (""name"" = @Original_name) AND (""department"" = @Original_department) AND (""email"" = @Original_email) AND (""password"" = @Original_password) AND ((@IsNull_profile_image = 1 AND ""profile_image"" IS NULL) OR (""profile_image"" = @Original_profile_image)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@srcode";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "srcode";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@name";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "name";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@department";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "department";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@email";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "email";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@password";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "password";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@profile_image";
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Oid;
            param.IsNullable = true;
            param.SourceColumn = "profile_image";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_srcode";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "srcode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_name";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_department";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "department";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_email";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "email";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_password";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "password";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@IsNull_profile_image";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "profile_image";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_profile_image";
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Oid;
            param.IsNullable = true;
            param.SourceColumn = "profile_image";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Npgsql.NpgsqlConnection();
            this._connection.ConnectionString = global::RGO_LIPA_FINALPROJECT.Properties.Settings.Default.RGO_LIPAConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Npgsql.NpgsqlCommand[1];
            this._commandCollection[0] = new global::Npgsql.NpgsqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"srcode\", \"name\", \"department\", \"email\", \"password\", \"profile_image\" FROM " +
                "\"public\".\"student\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(RGO_LIPADataSet.studentDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual RGO_LIPADataSet.studentDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            RGO_LIPADataSet.studentDataTable dataTable = new RGO_LIPADataSet.studentDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(RGO_LIPADataSet.studentDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(RGO_LIPADataSet dataSet) {
            return this.Adapter.Update(dataSet, "student");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int @Original_srcode, string @Original_name, string @Original_department, string @Original_email, string @Original_password, object @Original_profile_image) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(@Original_srcode));
            if ((@Original_name == null)) {
                throw new global::System.ArgumentNullException("@Original_name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(@Original_name));
            }
            if ((@Original_department == null)) {
                throw new global::System.ArgumentNullException("@Original_department");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(@Original_department));
            }
            if ((@Original_email == null)) {
                throw new global::System.ArgumentNullException("@Original_email");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(@Original_email));
            }
            if ((@Original_password == null)) {
                throw new global::System.ArgumentNullException("@Original_password");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(@Original_password));
            }
            if ((@Original_profile_image == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(@Original_profile_image));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int @srcode, string @name, string @department, string @email, string @password, object @profile_image) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(@srcode));
            if ((@name == null)) {
                throw new global::System.ArgumentNullException("@name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(@name));
            }
            if ((@department == null)) {
                throw new global::System.ArgumentNullException("@department");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(@department));
            }
            if ((@email == null)) {
                throw new global::System.ArgumentNullException("@email");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(@email));
            }
            if ((@password == null)) {
                throw new global::System.ArgumentNullException("@password");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(@password));
            }
            if ((@profile_image == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((object)(@profile_image));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int @srcode, string @name, string @department, string @email, string @password, object @profile_image, int @Original_srcode, string @Original_name, string @Original_department, string @Original_email, string @Original_password, object @Original_profile_image) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(@srcode));
            if ((@name == null)) {
                throw new global::System.ArgumentNullException("@name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(@name));
            }
            if ((@department == null)) {
                throw new global::System.ArgumentNullException("@department");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(@department));
            }
            if ((@email == null)) {
                throw new global::System.ArgumentNullException("@email");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(@email));
            }
            if ((@password == null)) {
                throw new global::System.ArgumentNullException("@password");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(@password));
            }
            if ((@profile_image == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(@profile_image));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(@Original_srcode));
            if ((@Original_name == null)) {
                throw new global::System.ArgumentNullException("@Original_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(@Original_name));
            }
            if ((@Original_department == null)) {
                throw new global::System.ArgumentNullException("@Original_department");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(@Original_department));
            }
            if ((@Original_email == null)) {
                throw new global::System.ArgumentNullException("@Original_email");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(@Original_email));
            }
            if ((@Original_password == null)) {
                throw new global::System.ArgumentNullException("@Original_password");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(@Original_password));
            }
            if ((@Original_profile_image == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(@Original_profile_image));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string @name, string @department, string @email, string @password, object @profile_image, int @Original_srcode, string @Original_name, string @Original_department, string @Original_email, string @Original_password, object @Original_profile_image) {
            return this.Update(@Original_srcode, @name, @department, @email, @password, @profile_image, @Original_srcode, @Original_name, @Original_department, @Original_email, @Original_password, @Original_profile_image);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private announcementTableAdapter _announcementTableAdapter;
        
        private faqTableAdapter _faqTableAdapter;
        
        private feedbacksTableAdapter _feedbacksTableAdapter;
        
        private itemTableAdapter _itemTableAdapter;
        
        private order_tableTableAdapter _order_tableTableAdapter;
        
        private other_staffsTableAdapter _other_staffsTableAdapter;
        
        private paymentTableAdapter _paymentTableAdapter;
        
        private rgo_staffsTableAdapter _rgo_staffsTableAdapter;
        
        private studentTableAdapter _studentTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public announcementTableAdapter announcementTableAdapter {
            get {
                return this._announcementTableAdapter;
            }
            set {
                this._announcementTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public faqTableAdapter faqTableAdapter {
            get {
                return this._faqTableAdapter;
            }
            set {
                this._faqTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public feedbacksTableAdapter feedbacksTableAdapter {
            get {
                return this._feedbacksTableAdapter;
            }
            set {
                this._feedbacksTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public itemTableAdapter itemTableAdapter {
            get {
                return this._itemTableAdapter;
            }
            set {
                this._itemTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public order_tableTableAdapter order_tableTableAdapter {
            get {
                return this._order_tableTableAdapter;
            }
            set {
                this._order_tableTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public other_staffsTableAdapter other_staffsTableAdapter {
            get {
                return this._other_staffsTableAdapter;
            }
            set {
                this._other_staffsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public paymentTableAdapter paymentTableAdapter {
            get {
                return this._paymentTableAdapter;
            }
            set {
                this._paymentTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public rgo_staffsTableAdapter rgo_staffsTableAdapter {
            get {
                return this._rgo_staffsTableAdapter;
            }
            set {
                this._rgo_staffsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public studentTableAdapter studentTableAdapter {
            get {
                return this._studentTableAdapter;
            }
            set {
                this._studentTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._announcementTableAdapter != null) 
                            && (this._announcementTableAdapter.Connection != null))) {
                    return this._announcementTableAdapter.Connection;
                }
                if (((this._faqTableAdapter != null) 
                            && (this._faqTableAdapter.Connection != null))) {
                    return this._faqTableAdapter.Connection;
                }
                if (((this._feedbacksTableAdapter != null) 
                            && (this._feedbacksTableAdapter.Connection != null))) {
                    return this._feedbacksTableAdapter.Connection;
                }
                if (((this._itemTableAdapter != null) 
                            && (this._itemTableAdapter.Connection != null))) {
                    return this._itemTableAdapter.Connection;
                }
                if (((this._order_tableTableAdapter != null) 
                            && (this._order_tableTableAdapter.Connection != null))) {
                    return this._order_tableTableAdapter.Connection;
                }
                if (((this._other_staffsTableAdapter != null) 
                            && (this._other_staffsTableAdapter.Connection != null))) {
                    return this._other_staffsTableAdapter.Connection;
                }
                if (((this._paymentTableAdapter != null) 
                            && (this._paymentTableAdapter.Connection != null))) {
                    return this._paymentTableAdapter.Connection;
                }
                if (((this._rgo_staffsTableAdapter != null) 
                            && (this._rgo_staffsTableAdapter.Connection != null))) {
                    return this._rgo_staffsTableAdapter.Connection;
                }
                if (((this._studentTableAdapter != null) 
                            && (this._studentTableAdapter.Connection != null))) {
                    return this._studentTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._announcementTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._faqTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._feedbacksTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._itemTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._order_tableTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._other_staffsTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._paymentTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._rgo_staffsTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._studentTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateUpdatedRows(RGO_LIPADataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._announcementTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.announcement.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._announcementTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._faqTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.faq.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._faqTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._feedbacksTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.feedbacks.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._feedbacksTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._itemTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.item.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._itemTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._order_tableTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.order_table.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._order_tableTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._other_staffsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.other_staffs.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._other_staffsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._paymentTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.payment.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._paymentTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._rgo_staffsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.rgo_staffs.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._rgo_staffsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._studentTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.student.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._studentTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateInsertedRows(RGO_LIPADataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._announcementTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.announcement.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._announcementTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._faqTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.faq.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._faqTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._feedbacksTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.feedbacks.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._feedbacksTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._itemTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.item.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._itemTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._order_tableTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.order_table.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._order_tableTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._other_staffsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.other_staffs.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._other_staffsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._paymentTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.payment.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._paymentTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._rgo_staffsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.rgo_staffs.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._rgo_staffsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._studentTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.student.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._studentTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateDeletedRows(RGO_LIPADataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._studentTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.student.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._studentTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._rgo_staffsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.rgo_staffs.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._rgo_staffsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._paymentTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.payment.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._paymentTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._other_staffsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.other_staffs.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._other_staffsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._order_tableTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.order_table.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._order_tableTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._itemTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.item.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._itemTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._feedbacksTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.feedbacks.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._feedbacksTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._faqTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.faq.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._faqTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._announcementTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.announcement.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._announcementTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public virtual int UpdateAll(RGO_LIPADataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._announcementTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._announcementTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._faqTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._faqTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._feedbacksTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._feedbacksTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._itemTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._itemTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._order_tableTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._order_tableTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._other_staffsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._other_staffsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._paymentTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._paymentTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._rgo_staffsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._rgo_staffsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._studentTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._studentTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._announcementTableAdapter != null)) {
                    revertConnections.Add(this._announcementTableAdapter, this._announcementTableAdapter.Connection);
                    this._announcementTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(workConnection));
                    this._announcementTableAdapter.Transaction = ((global::Npgsql.NpgsqlTransaction)(workTransaction));
                    if (this._announcementTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._announcementTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._announcementTableAdapter.Adapter);
                    }
                }
                if ((this._faqTableAdapter != null)) {
                    revertConnections.Add(this._faqTableAdapter, this._faqTableAdapter.Connection);
                    this._faqTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(workConnection));
                    this._faqTableAdapter.Transaction = ((global::Npgsql.NpgsqlTransaction)(workTransaction));
                    if (this._faqTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._faqTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._faqTableAdapter.Adapter);
                    }
                }
                if ((this._feedbacksTableAdapter != null)) {
                    revertConnections.Add(this._feedbacksTableAdapter, this._feedbacksTableAdapter.Connection);
                    this._feedbacksTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(workConnection));
                    this._feedbacksTableAdapter.Transaction = ((global::Npgsql.NpgsqlTransaction)(workTransaction));
                    if (this._feedbacksTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._feedbacksTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._feedbacksTableAdapter.Adapter);
                    }
                }
                if ((this._itemTableAdapter != null)) {
                    revertConnections.Add(this._itemTableAdapter, this._itemTableAdapter.Connection);
                    this._itemTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(workConnection));
                    this._itemTableAdapter.Transaction = ((global::Npgsql.NpgsqlTransaction)(workTransaction));
                    if (this._itemTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._itemTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._itemTableAdapter.Adapter);
                    }
                }
                if ((this._order_tableTableAdapter != null)) {
                    revertConnections.Add(this._order_tableTableAdapter, this._order_tableTableAdapter.Connection);
                    this._order_tableTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(workConnection));
                    this._order_tableTableAdapter.Transaction = ((global::Npgsql.NpgsqlTransaction)(workTransaction));
                    if (this._order_tableTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._order_tableTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._order_tableTableAdapter.Adapter);
                    }
                }
                if ((this._other_staffsTableAdapter != null)) {
                    revertConnections.Add(this._other_staffsTableAdapter, this._other_staffsTableAdapter.Connection);
                    this._other_staffsTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(workConnection));
                    this._other_staffsTableAdapter.Transaction = ((global::Npgsql.NpgsqlTransaction)(workTransaction));
                    if (this._other_staffsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._other_staffsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._other_staffsTableAdapter.Adapter);
                    }
                }
                if ((this._paymentTableAdapter != null)) {
                    revertConnections.Add(this._paymentTableAdapter, this._paymentTableAdapter.Connection);
                    this._paymentTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(workConnection));
                    this._paymentTableAdapter.Transaction = ((global::Npgsql.NpgsqlTransaction)(workTransaction));
                    if (this._paymentTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._paymentTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._paymentTableAdapter.Adapter);
                    }
                }
                if ((this._rgo_staffsTableAdapter != null)) {
                    revertConnections.Add(this._rgo_staffsTableAdapter, this._rgo_staffsTableAdapter.Connection);
                    this._rgo_staffsTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(workConnection));
                    this._rgo_staffsTableAdapter.Transaction = ((global::Npgsql.NpgsqlTransaction)(workTransaction));
                    if (this._rgo_staffsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._rgo_staffsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._rgo_staffsTableAdapter.Adapter);
                    }
                }
                if ((this._studentTableAdapter != null)) {
                    revertConnections.Add(this._studentTableAdapter, this._studentTableAdapter.Connection);
                    this._studentTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(workConnection));
                    this._studentTableAdapter.Transaction = ((global::Npgsql.NpgsqlTransaction)(workTransaction));
                    if (this._studentTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._studentTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._studentTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._announcementTableAdapter != null)) {
                    this._announcementTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(revertConnections[this._announcementTableAdapter]));
                    this._announcementTableAdapter.Transaction = null;
                }
                if ((this._faqTableAdapter != null)) {
                    this._faqTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(revertConnections[this._faqTableAdapter]));
                    this._faqTableAdapter.Transaction = null;
                }
                if ((this._feedbacksTableAdapter != null)) {
                    this._feedbacksTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(revertConnections[this._feedbacksTableAdapter]));
                    this._feedbacksTableAdapter.Transaction = null;
                }
                if ((this._itemTableAdapter != null)) {
                    this._itemTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(revertConnections[this._itemTableAdapter]));
                    this._itemTableAdapter.Transaction = null;
                }
                if ((this._order_tableTableAdapter != null)) {
                    this._order_tableTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(revertConnections[this._order_tableTableAdapter]));
                    this._order_tableTableAdapter.Transaction = null;
                }
                if ((this._other_staffsTableAdapter != null)) {
                    this._other_staffsTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(revertConnections[this._other_staffsTableAdapter]));
                    this._other_staffsTableAdapter.Transaction = null;
                }
                if ((this._paymentTableAdapter != null)) {
                    this._paymentTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(revertConnections[this._paymentTableAdapter]));
                    this._paymentTableAdapter.Transaction = null;
                }
                if ((this._rgo_staffsTableAdapter != null)) {
                    this._rgo_staffsTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(revertConnections[this._rgo_staffsTableAdapter]));
                    this._rgo_staffsTableAdapter.Transaction = null;
                }
                if ((this._studentTableAdapter != null)) {
                    this._studentTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(revertConnections[this._studentTableAdapter]));
                    this._studentTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591